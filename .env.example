# ==========================================
# FLOPODS - Environment Configuration
# ==========================================
# Copy this file to .env and update the values
# For local development, the default values work out of the box with Docker Compose

# ==========================================
# DATABASE (PostgreSQL with pgvector)
# ==========================================
# Default: Uses Docker Compose PostgreSQL on port 5434
DATABASE_URL="postgresql://postgres:123@localhost:5434/flopods?schema=public"

# ==========================================
# ENVIRONMENT
# ==========================================
NODE_ENV="development"

# ==========================================
# BACKEND & FRONTEND
# ==========================================
BACKEND_PORT=8000
FRONTEND_PORT=5173
FRONTEND_URL="http://localhost:5173"

# ==========================================
# JWT TOKENS
# ==========================================
# IMPORTANT: Generate secure random strings for production
# Example command: openssl rand -base64 32
JWT_ACCESS_TOKEN_SECRET=your-super-secret-access-key-change-in-production-min-32-chars
JWT_REFRESH_TOKEN_SECRET=your-super-secret-refresh-key-change-in-production-min-32-chars
JWT_ACCESS_TOKEN_EXPIRATION=15m
JWT_REFRESH_TOKEN_EXPIRATION=7d

# ==========================================
# API KEY ENCRYPTION (32 bytes = 64 hex chars)
# ==========================================
# IMPORTANT: Generate a secure 64-character hex string for production
# Example command: openssl rand -hex 32
API_KEY_ENCRYPTION_SECRET=ba9272943ba14f17c59563493adb747112e4a13dcdb22cea641b6b86779f97a9

# ==========================================
# OAUTH PROVIDERS (Optional)
# ==========================================
# To enable OAuth, create apps at:
# - Google: https://console.cloud.google.com/apis/credentials
# - GitHub: https://github.com/settings/developers

# Google OAuth
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret
GOOGLE_CALLBACK_URL=http://localhost:8000/api/v1/auth/google/callback

# GitHub OAuth
GITHUB_CLIENT_ID=your-github-client-id
GITHUB_CLIENT_SECRET=your-github-client-secret
GITHUB_CALLBACK_URL=http://localhost:8000/api/v1/auth/github/callback

# ==========================================
# AWS CONFIGURATION
# ==========================================
AWS_REGION=ap-south-1

# ==========================================
# AWS LOCALSTACK (Local Development - Default)
# ==========================================
# LocalStack emulates AWS services locally
# No real AWS account required for local development
# These defaults work with docker-compose

# LocalStack Endpoint
AWS_ENDPOINT_URL=http://localhost:4566

# SES (Email Service)
AWS_SES_ACCESS_KEY_ID=test
AWS_SES_SECRET_ACCESS_KEY=test
AWS_SES_NO_REPLY_EMAIL=noreply@flopods.local
AWS_SES_SUPPORT_EMAIL=support@flopods.local

# S3 (File Storage)
AWS_S3_ACCESS_KEY_ID=test
AWS_S3_SECRET_ACCESS_KEY=test
AWS_S3_BUCKET_NAME=flopods-files-dev
AWS_S3_REGION=ap-south-1
AWS_S3_ENDPOINT=http://localhost:4566

# DynamoDB (NoSQL Database)
AWS_DYNAMODB_ACCESS_KEY_ID=test
AWS_DYNAMODB_SECRET_ACCESS_KEY=test
AWS_DYNAMODB_ENDPOINT=http://localhost:4566
AWS_DYNAMODB_REGION=ap-south-1

# DynamoDB Table Names
AWS_DYNAMODB_POD_TABLE=flopods-pods-dev
AWS_DYNAMODB_SESSION_TABLE=flopods-sessions-dev
AWS_DYNAMODB_EXECUTION_TABLE=flopods-executions-dev
AWS_DYNAMODB_CACHE_TABLE=flopods-cache-dev
AWS_DYNAMODB_CONTEXT_TABLE=flopods-context-dev

# ==========================================
# PRODUCTION AWS (Optional)
# ==========================================
# Uncomment and configure these for production deployment with real AWS
# Make sure to comment out LocalStack settings above

# # Production SES
# AWS_SES_ACCESS_KEY_ID=your-aws-access-key
# AWS_SES_SECRET_ACCESS_KEY=your-aws-secret-key
# AWS_SES_NO_REPLY_EMAIL=noreply@yourdomain.com
# AWS_SES_SUPPORT_EMAIL=support@yourdomain.com

# # Production S3
# AWS_S3_ACCESS_KEY_ID=your-aws-access-key
# AWS_S3_SECRET_ACCESS_KEY=your-aws-secret-key
# AWS_S3_BUCKET_NAME=your-s3-bucket-name
# AWS_S3_REGION=your-aws-region
# # AWS_S3_ENDPOINT=  # Leave empty for real AWS

# # Production DynamoDB
# AWS_DYNAMODB_ACCESS_KEY_ID=your-aws-access-key
# AWS_DYNAMODB_SECRET_ACCESS_KEY=your-aws-secret-key
# # AWS_DYNAMODB_ENDPOINT=  # Leave empty for real AWS
# AWS_DYNAMODB_REGION=your-aws-region

# ==========================================
# REDIS (Queue & Cache)
# ==========================================
# Default: Uses Docker Compose Redis
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=yourpassword
REDIS_TLS_ENABLED=false

# ==========================================
# QUEUE CONFIGURATION
# ==========================================
# Options: 'redis' (local) or 'sqs' (AWS production)
QUEUE_BACKEND=redis

# Production SQS (Uncomment for AWS production)
# QUEUE_BACKEND=sqs
# AWS_SQS_REGION=your-aws-region
# AWS_SQS_QUEUE_URL=https://sqs.region.amazonaws.com/account/queue-name.fifo
# AWS_SQS_DLQ_URL=https://sqs.region.amazonaws.com/account/dlq-name.fifo
# AWS_SQS_ACCESS_KEY_ID=your-aws-access-key
# AWS_SQS_SECRET_ACCESS_KEY=your-aws-secret-key

# ==========================================
# DOCUMENT PROCESSING
# ==========================================
DOCUMENT_MAX_FILE_SIZE=104857600  # 100MB
DOCUMENT_S3_BUCKET=flopods-documents-dev
DOCUMENT_VECTOR_S3_BUCKET=flopods-vectors-dev

# Production (Uncomment for production)
# DOCUMENT_MAX_FILE_SIZE=524288000  # 500MB
# DOCUMENT_S3_BUCKET=flopods-documents-prod
# DOCUMENT_VECTOR_S3_BUCKET=flopods-vectors-prod

# ==========================================
# AI PROVIDERS
# ==========================================
# Get your API keys from:
# - Gemini: https://makersuite.google.com/app/apikey
# - OpenAI: https://platform.openai.com/api-keys
# - Anthropic: https://console.anthropic.com/

GEMINI_API_KEY=your-gemini-api-key

# Optional: Add other AI providers
# OPENAI_API_KEY=your-openai-api-key
# ANTHROPIC_API_KEY=your-anthropic-api-key

# ==========================================
# FRONTEND (VITE)
# ==========================================
VITE_API_URL="http://localhost:8000/api/v1"
VITE_WS_URL="ws://localhost:8000"
# IMPORTANT: Generate a secure 32-character key for production
VITE_TOKEN_ENCRYPTION_KEY=your_super_secure_32_character_key_here_change_in_production
