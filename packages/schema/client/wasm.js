
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AdminScalarFieldEnum = {
  id: 'id',
  email: 'email',
  username: 'username',
  passwordHash: 'passwordHash',
  role: 'role',
  status: 'status',
  isSuperAdmin: 'isSuperAdmin',
  requiresMfa: 'requiresMfa',
  mfaSecret: 'mfaSecret',
  mfaBackupCodes: 'mfaBackupCodes',
  mfaVerifiedAt: 'mfaVerifiedAt',
  allowedIpAddresses: 'allowedIpAddresses',
  lastLoginAt: 'lastLoginAt',
  lastLoginIp: 'lastLoginIp',
  failedLoginAttempts: 'failedLoginAttempts',
  lockedUntil: 'lockedUntil',
  passwordChangedAt: 'passwordChangedAt',
  passwordResetToken: 'passwordResetToken',
  passwordResetExpiry: 'passwordResetExpiry',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  createdBy: 'createdBy',
  deactivatedAt: 'deactivatedAt',
  deactivatedBy: 'deactivatedBy'
};

exports.Prisma.AdminSessionScalarFieldEnum = {
  id: 'id',
  adminId: 'adminId',
  token: 'token',
  refreshToken: 'refreshToken',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  deviceFingerprint: 'deviceFingerprint',
  createdAt: 'createdAt',
  expiresAt: 'expiresAt',
  lastActivityAt: 'lastActivityAt',
  revokedAt: 'revokedAt',
  revokedReason: 'revokedReason'
};

exports.Prisma.AdminAuditLogScalarFieldEnum = {
  id: 'id',
  adminId: 'adminId',
  action: 'action',
  resource: 'resource',
  resourceId: 'resourceId',
  method: 'method',
  endpoint: 'endpoint',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  changesBefore: 'changesBefore',
  changesAfter: 'changesAfter',
  status: 'status',
  errorMessage: 'errorMessage',
  metadata: 'metadata',
  executionTimeMs: 'executionTimeMs',
  createdAt: 'createdAt'
};

exports.Prisma.AdminPermissionScalarFieldEnum = {
  id: 'id',
  adminId: 'adminId',
  permission: 'permission',
  resource: 'resource',
  grantedAt: 'grantedAt',
  grantedBy: 'grantedBy',
  expiresAt: 'expiresAt'
};

exports.Prisma.AdminAPIKeyScalarFieldEnum = {
  id: 'id',
  adminId: 'adminId',
  name: 'name',
  keyHash: 'keyHash',
  keyPrefix: 'keyPrefix',
  scopes: 'scopes',
  rateLimit: 'rateLimit',
  allowedIps: 'allowedIps',
  createdAt: 'createdAt',
  lastUsedAt: 'lastUsedAt',
  expiresAt: 'expiresAt',
  revokedAt: 'revokedAt'
};

exports.Prisma.AdminInvitationScalarFieldEnum = {
  id: 'id',
  email: 'email',
  role: 'role',
  token: 'token',
  invitedBy: 'invitedBy',
  createdAt: 'createdAt',
  expiresAt: 'expiresAt',
  acceptedAt: 'acceptedAt'
};

exports.Prisma.AdminSecurityEventScalarFieldEnum = {
  id: 'id',
  eventType: 'eventType',
  severity: 'severity',
  adminId: 'adminId',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  description: 'description',
  metadata: 'metadata',
  resolved: 'resolved',
  resolvedAt: 'resolvedAt',
  resolvedBy: 'resolvedBy',
  createdAt: 'createdAt'
};

exports.Prisma.SubscriptionScalarFieldEnum = {
  id: 'id',
  workspaceId: 'workspaceId',
  tier: 'tier',
  status: 'status',
  stripeCustomerId: 'stripeCustomerId',
  stripeSubscriptionId: 'stripeSubscriptionId',
  credits: 'credits',
  monthlyCreditQuota: 'monthlyCreditQuota',
  creditResetDate: 'creditResetDate',
  maxCanvases: 'maxCanvases',
  maxActionPodsPerCanvas: 'maxActionPodsPerCanvas',
  maxDocumentSizeInMB: 'maxDocumentSizeInMB',
  maxCollaboratorsPerCanvas: 'maxCollaboratorsPerCanvas',
  canInviteToWorkspace: 'canInviteToWorkspace',
  canInviteToCanvas: 'canInviteToCanvas',
  canCreatePublicLinks: 'canCreatePublicLinks',
  canUseAdvancedModels: 'canUseAdvancedModels',
  canAccessAnalytics: 'canAccessAnalytics',
  canExportData: 'canExportData',
  nextBillingDate: 'nextBillingDate',
  currentPeriodStart: 'currentPeriodStart',
  currentPeriodEnd: 'currentPeriodEnd',
  cancelAtPeriodEnd: 'cancelAtPeriodEnd',
  isByokMode: 'isByokMode',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CreditPurchaseScalarFieldEnum = {
  id: 'id',
  subscriptionId: 'subscriptionId',
  creditsPurchased: 'creditsPurchased',
  amountPaid: 'amountPaid',
  currency: 'currency',
  stripeChargeId: 'stripeChargeId',
  status: 'status',
  purchasedAt: 'purchasedAt'
};

exports.Prisma.CreditUsageLogScalarFieldEnum = {
  id: 'id',
  subscriptionId: 'subscriptionId',
  workspaceId: 'workspaceId',
  canvasId: 'canvasId',
  podId: 'podId',
  executionId: 'executionId',
  creditsUsed: 'creditsUsed',
  balanceBefore: 'balanceBefore',
  balanceAfter: 'balanceAfter',
  provider: 'provider',
  modelId: 'modelId',
  modelName: 'modelName',
  createdAt: 'createdAt'
};

exports.Prisma.ModelPricingTierScalarFieldEnum = {
  id: 'id',
  provider: 'provider',
  modelId: 'modelId',
  category: 'category',
  displayName: 'displayName',
  description: 'description',
  inputTokenCost: 'inputTokenCost',
  outputTokenCost: 'outputTokenCost',
  reasoningTokenCost: 'reasoningTokenCost',
  creditsPerMillionInputTokens: 'creditsPerMillionInputTokens',
  creditsPerMillionOutputTokens: 'creditsPerMillionOutputTokens',
  creditsPerMillionReasoningTokens: 'creditsPerMillionReasoningTokens',
  maxTokens: 'maxTokens',
  maxOutputTokens: 'maxOutputTokens',
  supportsStreaming: 'supportsStreaming',
  supportsVision: 'supportsVision',
  supportsAudio: 'supportsAudio',
  supportsVideo: 'supportsVideo',
  supportsFunctions: 'supportsFunctions',
  supportsJsonMode: 'supportsJsonMode',
  supportsSystemPrompt: 'supportsSystemPrompt',
  providerConfig: 'providerConfig',
  isActive: 'isActive',
  effectiveFrom: 'effectiveFrom',
  effectiveUntil: 'effectiveUntil',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CanvasScalarFieldEnum = {
  id: 'id',
  workspaceId: 'workspaceId',
  name: 'name',
  description: 'description',
  version: 'version',
  visibility: 'visibility',
  createdBy: 'createdBy',
  thumbnailS3Key: 'thumbnailS3Key',
  thumbnailGeneratedAt: 'thumbnailGeneratedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CanvasInvitationScalarFieldEnum = {
  id: 'id',
  canvasId: 'canvasId',
  email: 'email',
  accessLevel: 'accessLevel',
  permissions: 'permissions',
  invitedBy: 'invitedBy',
  invitedUserId: 'invitedUserId',
  token: 'token',
  status: 'status',
  createdAt: 'createdAt',
  expiresAt: 'expiresAt',
  acceptedAt: 'acceptedAt'
};

exports.Prisma.CanvasCollaboratorScalarFieldEnum = {
  id: 'id',
  canvasId: 'canvasId',
  userId: 'userId',
  accessLevel: 'accessLevel',
  canEdit: 'canEdit',
  canExecute: 'canExecute',
  canDelete: 'canDelete',
  canShare: 'canShare',
  canInvite: 'canInvite',
  invitedBy: 'invitedBy',
  invitedAt: 'invitedAt',
  lastViewedAt: 'lastViewedAt'
};

exports.Prisma.CanvasSessionScalarFieldEnum = {
  id: 'id',
  canvasId: 'canvasId',
  userId: 'userId',
  anonymousName: 'anonymousName',
  sessionToken: 'sessionToken',
  socketId: 'socketId',
  cursorPosition: 'cursorPosition',
  selectedPodIds: 'selectedPodIds',
  viewportState: 'viewportState',
  userColor: 'userColor',
  userAgent: 'userAgent',
  ipAddress: 'ipAddress',
  connectedAt: 'connectedAt',
  lastHeartbeatAt: 'lastHeartbeatAt',
  disconnectedAt: 'disconnectedAt'
};

exports.Prisma.CanvasActivityLogScalarFieldEnum = {
  id: 'id',
  canvasId: 'canvasId',
  userId: 'userId',
  action: 'action',
  entityType: 'entityType',
  entityId: 'entityId',
  changeData: 'changeData',
  createdAt: 'createdAt'
};

exports.Prisma.CanvasCommentScalarFieldEnum = {
  id: 'id',
  canvasId: 'canvasId',
  userId: 'userId',
  content: 'content',
  position: 'position',
  podId: 'podId',
  parentId: 'parentId',
  isResolved: 'isResolved',
  resolvedBy: 'resolvedBy',
  resolvedAt: 'resolvedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ActionPodScalarFieldEnum = {
  id: 'id',
  canvasId: 'canvasId',
  type: 'type',
  position: 'position',
  executionStatus: 'executionStatus',
  lastExecutionId: 'lastExecutionId',
  contextCanvasId: 'contextCanvasId',
  documentId: 'documentId',
  lockedBy: 'lockedBy',
  lockedAt: 'lockedAt',
  dynamoPartitionKey: 'dynamoPartitionKey',
  dynamoSortKey: 'dynamoSortKey',
  s3VectorBucket: 's3VectorBucket',
  s3VectorKey: 's3VectorKey',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EdgeScalarFieldEnum = {
  id: 'id',
  canvasId: 'canvasId',
  sourcePodId: 'sourcePodId',
  targetPodId: 'targetPodId',
  sourceHandle: 'sourceHandle',
  targetHandle: 'targetHandle',
  animated: 'animated',
  createdAt: 'createdAt'
};

exports.Prisma.ActionPodExecutionScalarFieldEnum = {
  id: 'id',
  podId: 'podId',
  canvasId: 'canvasId',
  workspaceId: 'workspaceId',
  status: 'status',
  startedAt: 'startedAt',
  finishedAt: 'finishedAt',
  runtimeInMs: 'runtimeInMs',
  provider: 'provider',
  modelId: 'modelId',
  modelName: 'modelName',
  providerMetadata: 'providerMetadata',
  requestMetadata: 'requestMetadata',
  responseMetadata: 'responseMetadata',
  errorMessage: 'errorMessage',
  errorCode: 'errorCode',
  inputTokens: 'inputTokens',
  outputTokens: 'outputTokens',
  reasoningTokens: 'reasoningTokens',
  creditsConsumed: 'creditsConsumed',
  costInUsd: 'costInUsd'
};

exports.Prisma.PodUsageLogScalarFieldEnum = {
  id: 'id',
  podId: 'podId',
  executionId: 'executionId',
  canvasId: 'canvasId',
  workspaceId: 'workspaceId',
  subscriptionId: 'subscriptionId',
  provider: 'provider',
  modelId: 'modelId',
  modelName: 'modelName',
  providerMetadata: 'providerMetadata',
  inputTokens: 'inputTokens',
  outputTokens: 'outputTokens',
  reasoningTokens: 'reasoningTokens',
  creditsConsumed: 'creditsConsumed',
  runtimeInMs: 'runtimeInMs',
  inputTokenCost: 'inputTokenCost',
  outputTokenCost: 'outputTokenCost',
  reasoningTokenCost: 'reasoningTokenCost',
  totalCostInUsd: 'totalCostInUsd',
  executedAt: 'executedAt'
};

exports.Prisma.ContextModuleScalarFieldEnum = {
  id: 'id',
  workspaceId: 'workspaceId',
  name: 'name',
  description: 'description',
  definitionJson: 'definitionJson',
  originalCanvasId: 'originalCanvasId',
  version: 'version',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  image: 'image',
  hash: 'hash',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RefreshTokenScalarFieldEnum = {
  id: 'id',
  token: 'token',
  deviceId: 'deviceId',
  userId: 'userId',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  provider: 'provider',
  providerAccountId: 'providerAccountId',
  accessToken: 'accessToken',
  refreshToken: 'refreshToken',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt'
};

exports.Prisma.WorkspaceScalarFieldEnum = {
  id: 'id',
  name: 'name',
  type: 'type',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WorkspaceUserScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  workspaceId: 'workspaceId',
  role: 'role',
  canCreateCanvas: 'canCreateCanvas',
  canDeleteCanvas: 'canDeleteCanvas',
  canManageBilling: 'canManageBilling',
  canInviteMembers: 'canInviteMembers',
  canManageMembers: 'canManageMembers',
  canManageApiKeys: 'canManageApiKeys',
  joinedAt: 'joinedAt',
  invitedBy: 'invitedBy'
};

exports.Prisma.WorkspaceInvitationScalarFieldEnum = {
  id: 'id',
  workspaceId: 'workspaceId',
  email: 'email',
  role: 'role',
  permissions: 'permissions',
  invitedBy: 'invitedBy',
  invitedUserId: 'invitedUserId',
  token: 'token',
  status: 'status',
  createdAt: 'createdAt',
  expiresAt: 'expiresAt',
  acceptedAt: 'acceptedAt'
};

exports.Prisma.ProviderAPIKeyScalarFieldEnum = {
  id: 'id',
  workspaceId: 'workspaceId',
  provider: 'provider',
  displayName: 'displayName',
  keyHash: 'keyHash',
  providerConfig: 'providerConfig',
  endpoint: 'endpoint',
  authType: 'authType',
  isActive: 'isActive',
  lastUsedAt: 'lastUsedAt',
  createdAt: 'createdAt',
  expiresAt: 'expiresAt'
};

exports.Prisma.ShareLinkScalarFieldEnum = {
  id: 'id',
  publicToken: 'publicToken',
  assetType: 'assetType',
  assetId: 'assetId',
  workspaceId: 'workspaceId',
  createdBy: 'createdBy',
  accessLevel: 'accessLevel',
  password: 'password',
  viewCount: 'viewCount',
  lastViewedAt: 'lastViewedAt',
  createdAt: 'createdAt',
  expiresAt: 'expiresAt'
};

exports.Prisma.DocumentScalarFieldEnum = {
  id: 'id',
  workspaceId: 'workspaceId',
  name: 'name',
  storageKey: 'storageKey',
  s3Bucket: 's3Bucket',
  fileType: 'fileType',
  mimeType: 'mimeType',
  sizeInBytes: 'sizeInBytes',
  status: 'status',
  uploadedBy: 'uploadedBy',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EmbeddingScalarFieldEnum = {
  id: 'id',
  documentId: 'documentId',
  model: 'model',
  chunkIndex: 'chunkIndex',
  chunkText: 'chunkText',
  s3VectorBucket: 's3VectorBucket',
  s3VectorKey: 's3VectorKey',
  vectorDimension: 'vectorDimension',
  metadata: 'metadata',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.AdminOrderByRelevanceFieldEnum = {
  id: 'id',
  email: 'email',
  username: 'username',
  passwordHash: 'passwordHash',
  mfaSecret: 'mfaSecret',
  lastLoginIp: 'lastLoginIp',
  passwordResetToken: 'passwordResetToken',
  createdBy: 'createdBy',
  deactivatedBy: 'deactivatedBy'
};

exports.Prisma.AdminSessionOrderByRelevanceFieldEnum = {
  id: 'id',
  adminId: 'adminId',
  token: 'token',
  refreshToken: 'refreshToken',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  deviceFingerprint: 'deviceFingerprint',
  revokedReason: 'revokedReason'
};

exports.Prisma.AdminAuditLogOrderByRelevanceFieldEnum = {
  id: 'id',
  adminId: 'adminId',
  resourceId: 'resourceId',
  method: 'method',
  endpoint: 'endpoint',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  errorMessage: 'errorMessage'
};

exports.Prisma.AdminPermissionOrderByRelevanceFieldEnum = {
  id: 'id',
  adminId: 'adminId',
  grantedBy: 'grantedBy'
};

exports.Prisma.AdminAPIKeyOrderByRelevanceFieldEnum = {
  id: 'id',
  adminId: 'adminId',
  name: 'name',
  keyHash: 'keyHash',
  keyPrefix: 'keyPrefix'
};

exports.Prisma.AdminInvitationOrderByRelevanceFieldEnum = {
  id: 'id',
  email: 'email',
  token: 'token',
  invitedBy: 'invitedBy'
};

exports.Prisma.AdminSecurityEventOrderByRelevanceFieldEnum = {
  id: 'id',
  adminId: 'adminId',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  description: 'description',
  resolvedBy: 'resolvedBy'
};

exports.Prisma.SubscriptionOrderByRelevanceFieldEnum = {
  id: 'id',
  workspaceId: 'workspaceId',
  stripeCustomerId: 'stripeCustomerId',
  stripeSubscriptionId: 'stripeSubscriptionId'
};

exports.Prisma.CreditPurchaseOrderByRelevanceFieldEnum = {
  id: 'id',
  subscriptionId: 'subscriptionId',
  currency: 'currency',
  stripeChargeId: 'stripeChargeId',
  status: 'status'
};

exports.Prisma.CreditUsageLogOrderByRelevanceFieldEnum = {
  id: 'id',
  subscriptionId: 'subscriptionId',
  workspaceId: 'workspaceId',
  canvasId: 'canvasId',
  podId: 'podId',
  executionId: 'executionId',
  modelId: 'modelId',
  modelName: 'modelName'
};

exports.Prisma.ModelPricingTierOrderByRelevanceFieldEnum = {
  id: 'id',
  modelId: 'modelId',
  displayName: 'displayName',
  description: 'description'
};

exports.Prisma.CanvasOrderByRelevanceFieldEnum = {
  id: 'id',
  workspaceId: 'workspaceId',
  name: 'name',
  description: 'description',
  createdBy: 'createdBy',
  thumbnailS3Key: 'thumbnailS3Key'
};

exports.Prisma.CanvasInvitationOrderByRelevanceFieldEnum = {
  id: 'id',
  canvasId: 'canvasId',
  email: 'email',
  invitedBy: 'invitedBy',
  invitedUserId: 'invitedUserId',
  token: 'token'
};

exports.Prisma.CanvasCollaboratorOrderByRelevanceFieldEnum = {
  id: 'id',
  canvasId: 'canvasId',
  userId: 'userId',
  invitedBy: 'invitedBy'
};

exports.Prisma.CanvasSessionOrderByRelevanceFieldEnum = {
  id: 'id',
  canvasId: 'canvasId',
  userId: 'userId',
  anonymousName: 'anonymousName',
  sessionToken: 'sessionToken',
  socketId: 'socketId',
  userColor: 'userColor',
  userAgent: 'userAgent',
  ipAddress: 'ipAddress'
};

exports.Prisma.CanvasActivityLogOrderByRelevanceFieldEnum = {
  id: 'id',
  canvasId: 'canvasId',
  userId: 'userId',
  entityType: 'entityType',
  entityId: 'entityId'
};

exports.Prisma.CanvasCommentOrderByRelevanceFieldEnum = {
  id: 'id',
  canvasId: 'canvasId',
  userId: 'userId',
  content: 'content',
  podId: 'podId',
  parentId: 'parentId',
  resolvedBy: 'resolvedBy'
};

exports.Prisma.ActionPodOrderByRelevanceFieldEnum = {
  id: 'id',
  canvasId: 'canvasId',
  lastExecutionId: 'lastExecutionId',
  contextCanvasId: 'contextCanvasId',
  documentId: 'documentId',
  lockedBy: 'lockedBy',
  dynamoPartitionKey: 'dynamoPartitionKey',
  dynamoSortKey: 'dynamoSortKey',
  s3VectorBucket: 's3VectorBucket',
  s3VectorKey: 's3VectorKey'
};

exports.Prisma.EdgeOrderByRelevanceFieldEnum = {
  id: 'id',
  canvasId: 'canvasId',
  sourcePodId: 'sourcePodId',
  targetPodId: 'targetPodId',
  sourceHandle: 'sourceHandle',
  targetHandle: 'targetHandle'
};

exports.Prisma.ActionPodExecutionOrderByRelevanceFieldEnum = {
  id: 'id',
  podId: 'podId',
  canvasId: 'canvasId',
  workspaceId: 'workspaceId',
  modelId: 'modelId',
  modelName: 'modelName',
  errorMessage: 'errorMessage',
  errorCode: 'errorCode'
};

exports.Prisma.PodUsageLogOrderByRelevanceFieldEnum = {
  id: 'id',
  podId: 'podId',
  executionId: 'executionId',
  canvasId: 'canvasId',
  workspaceId: 'workspaceId',
  subscriptionId: 'subscriptionId',
  modelId: 'modelId',
  modelName: 'modelName'
};

exports.Prisma.ContextModuleOrderByRelevanceFieldEnum = {
  id: 'id',
  workspaceId: 'workspaceId',
  name: 'name',
  description: 'description',
  originalCanvasId: 'originalCanvasId'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  image: 'image',
  hash: 'hash'
};

exports.Prisma.RefreshTokenOrderByRelevanceFieldEnum = {
  id: 'id',
  token: 'token',
  deviceId: 'deviceId',
  userId: 'userId'
};

exports.Prisma.AccountOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  providerAccountId: 'providerAccountId',
  accessToken: 'accessToken',
  refreshToken: 'refreshToken'
};

exports.Prisma.WorkspaceOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.WorkspaceUserOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  workspaceId: 'workspaceId',
  invitedBy: 'invitedBy'
};

exports.Prisma.WorkspaceInvitationOrderByRelevanceFieldEnum = {
  id: 'id',
  workspaceId: 'workspaceId',
  email: 'email',
  invitedBy: 'invitedBy',
  invitedUserId: 'invitedUserId',
  token: 'token'
};

exports.Prisma.ProviderAPIKeyOrderByRelevanceFieldEnum = {
  id: 'id',
  workspaceId: 'workspaceId',
  displayName: 'displayName',
  keyHash: 'keyHash',
  endpoint: 'endpoint'
};

exports.Prisma.ShareLinkOrderByRelevanceFieldEnum = {
  id: 'id',
  publicToken: 'publicToken',
  assetId: 'assetId',
  workspaceId: 'workspaceId',
  createdBy: 'createdBy',
  password: 'password'
};

exports.Prisma.DocumentOrderByRelevanceFieldEnum = {
  id: 'id',
  workspaceId: 'workspaceId',
  name: 'name',
  storageKey: 'storageKey',
  s3Bucket: 's3Bucket',
  fileType: 'fileType',
  mimeType: 'mimeType',
  uploadedBy: 'uploadedBy'
};

exports.Prisma.EmbeddingOrderByRelevanceFieldEnum = {
  id: 'id',
  documentId: 'documentId',
  model: 'model',
  chunkText: 'chunkText',
  s3VectorBucket: 's3VectorBucket',
  s3VectorKey: 's3VectorKey'
};
exports.AdminRole = exports.$Enums.AdminRole = {
  SUPER_ADMIN: 'SUPER_ADMIN',
  ADMIN: 'ADMIN',
  FINANCE: 'FINANCE',
  SUPPORT: 'SUPPORT',
  DEVELOPER: 'DEVELOPER',
  ANALYST: 'ANALYST'
};

exports.AdminStatus = exports.$Enums.AdminStatus = {
  PENDING: 'PENDING',
  ACTIVE: 'ACTIVE',
  SUSPENDED: 'SUSPENDED',
  DEACTIVATED: 'DEACTIVATED',
  LOCKED: 'LOCKED'
};

exports.AdminAction = exports.$Enums.AdminAction = {
  USER_CREATED: 'USER_CREATED',
  USER_UPDATED: 'USER_UPDATED',
  USER_DELETED: 'USER_DELETED',
  USER_SUSPENDED: 'USER_SUSPENDED',
  WORKSPACE_DELETED: 'WORKSPACE_DELETED',
  SUBSCRIPTION_UPDATED: 'SUBSCRIPTION_UPDATED',
  SUBSCRIPTION_CANCELLED: 'SUBSCRIPTION_CANCELLED',
  CREDITS_ADDED: 'CREDITS_ADDED',
  CREDITS_REMOVED: 'CREDITS_REMOVED',
  REFUND_ISSUED: 'REFUND_ISSUED',
  MODEL_ADDED: 'MODEL_ADDED',
  MODEL_UPDATED: 'MODEL_UPDATED',
  PRICING_CHANGED: 'PRICING_CHANGED',
  ADMIN_INVITED: 'ADMIN_INVITED',
  ADMIN_CREATED: 'ADMIN_CREATED',
  ADMIN_ROLE_CHANGED: 'ADMIN_ROLE_CHANGED',
  PERMISSION_GRANTED: 'PERMISSION_GRANTED',
  SESSION_REVOKED: 'SESSION_REVOKED',
  CONFIG_CHANGED: 'CONFIG_CHANGED',
  DATA_EXPORTED: 'DATA_EXPORTED'
};

exports.AdminResource = exports.$Enums.AdminResource = {
  USER: 'USER',
  WORKSPACE: 'WORKSPACE',
  SUBSCRIPTION: 'SUBSCRIPTION',
  CREDIT: 'CREDIT',
  MODEL: 'MODEL',
  ADMIN: 'ADMIN',
  PERMISSION: 'PERMISSION',
  SESSION: 'SESSION',
  API_KEY: 'API_KEY',
  CANVAS: 'CANVAS',
  ACTION_POD: 'ACTION_POD',
  DOCUMENT: 'DOCUMENT',
  AUDIT_LOG: 'AUDIT_LOG',
  SYSTEM_CONFIG: 'SYSTEM_CONFIG'
};

exports.SpecificPermission = exports.$Enums.SpecificPermission = {
  USER_VIEW: 'USER_VIEW',
  USER_UPDATE: 'USER_UPDATE',
  USER_DELETE: 'USER_DELETE',
  USER_SUSPEND: 'USER_SUSPEND',
  WORKSPACE_VIEW: 'WORKSPACE_VIEW',
  WORKSPACE_DELETE: 'WORKSPACE_DELETE',
  BILLING_VIEW: 'BILLING_VIEW',
  BILLING_MANAGE: 'BILLING_MANAGE',
  CREDITS_MANAGE: 'CREDITS_MANAGE',
  REFUND_ISSUE: 'REFUND_ISSUE',
  MODEL_VIEW: 'MODEL_VIEW',
  MODEL_MANAGE: 'MODEL_MANAGE',
  PRICING_MANAGE: 'PRICING_MANAGE',
  ADMIN_VIEW: 'ADMIN_VIEW',
  ADMIN_INVITE: 'ADMIN_INVITE',
  ADMIN_MANAGE: 'ADMIN_MANAGE',
  SYSTEM_CONFIG_VIEW: 'SYSTEM_CONFIG_VIEW',
  SYSTEM_CONFIG_MANAGE: 'SYSTEM_CONFIG_MANAGE',
  AUDIT_LOG_VIEW: 'AUDIT_LOG_VIEW',
  AUDIT_LOG_EXPORT: 'AUDIT_LOG_EXPORT',
  DATA_EXPORT: 'DATA_EXPORT',
  DATA_DELETE: 'DATA_DELETE'
};

exports.SecurityEventType = exports.$Enums.SecurityEventType = {
  FAILED_LOGIN: 'FAILED_LOGIN',
  MULTIPLE_FAILED_LOGINS: 'MULTIPLE_FAILED_LOGINS',
  SUSPICIOUS_IP: 'SUSPICIOUS_IP',
  ACCOUNT_LOCKED: 'ACCOUNT_LOCKED',
  MFA_FAILED: 'MFA_FAILED',
  UNAUTHORIZED_ACCESS_ATTEMPT: 'UNAUTHORIZED_ACCESS_ATTEMPT'
};

exports.SecuritySeverity = exports.$Enums.SecuritySeverity = {
  LOW: 'LOW',
  MEDIUM: 'MEDIUM',
  HIGH: 'HIGH',
  CRITICAL: 'CRITICAL'
};

exports.SubscriptionTier = exports.$Enums.SubscriptionTier = {
  HOBBYIST: 'HOBBYIST',
  PRO: 'PRO',
  TEAM: 'TEAM'
};

exports.SubscriptionStatus = exports.$Enums.SubscriptionStatus = {
  ACTIVE: 'ACTIVE',
  CANCELED: 'CANCELED',
  PAST_DUE: 'PAST_DUE',
  TRIALING: 'TRIALING',
  INCOMPLETE: 'INCOMPLETE',
  PAUSED: 'PAUSED'
};

exports.ModelCategory = exports.$Enums.ModelCategory = {
  WORKHORSE: 'WORKHORSE',
  POWERHOUSE: 'POWERHOUSE',
  REASONING: 'REASONING',
  SPECIALIST: 'SPECIALIST',
  IMAGE_GEN: 'IMAGE_GEN',
  VIDEO_GEN: 'VIDEO_GEN',
  AUDIO_GEN: 'AUDIO_GEN',
  EMBEDDING: 'EMBEDDING',
  RERANKING: 'RERANKING',
  MODERATION: 'MODERATION',
  SEARCH: 'SEARCH',
  TRANSLATION: 'TRANSLATION'
};

exports.ActionPodType = exports.$Enums.ActionPodType = {
  TEXT_INPUT: 'TEXT_INPUT',
  DOCUMENT_INPUT: 'DOCUMENT_INPUT',
  URL_INPUT: 'URL_INPUT',
  IMAGE_INPUT: 'IMAGE_INPUT',
  VIDEO_INPUT: 'VIDEO_INPUT',
  AUDIO_INPUT: 'AUDIO_INPUT',
  LLM_PROMPT: 'LLM_PROMPT',
  EMBEDDING_POD: 'EMBEDDING_POD',
  TOOL_POD: 'TOOL_POD',
  TEXT_OUTPUT: 'TEXT_OUTPUT',
  IMAGE_OUTPUT: 'IMAGE_OUTPUT',
  VIDEO_OUTPUT: 'VIDEO_OUTPUT',
  AUDIO_OUTPUT: 'AUDIO_OUTPUT',
  CONTEXT_MODULE: 'CONTEXT_MODULE',
  CANVAS_CONTEXT_INPUT: 'CANVAS_CONTEXT_INPUT',
  CODE_EXECUTION: 'CODE_EXECUTION'
};

exports.ActionPodExecutionStatus = exports.$Enums.ActionPodExecutionStatus = {
  IDLE: 'IDLE',
  QUEUED: 'QUEUED',
  RUNNING: 'RUNNING',
  PAUSED: 'PAUSED',
  COMPLETED: 'COMPLETED',
  ERROR: 'ERROR',
  CANCELLED: 'CANCELLED'
};

exports.CanvasVisibility = exports.$Enums.CanvasVisibility = {
  PRIVATE: 'PRIVATE',
  WORKSPACE: 'WORKSPACE',
  PUBLIC: 'PUBLIC'
};

exports.CanvasAccessLevel = exports.$Enums.CanvasAccessLevel = {
  VIEWER: 'VIEWER',
  COMMENTER: 'COMMENTER',
  EDITOR: 'EDITOR',
  OWNER: 'OWNER'
};

exports.CanvasActivityAction = exports.$Enums.CanvasActivityAction = {
  CANVAS_CREATED: 'CANVAS_CREATED',
  CANVAS_UPDATED: 'CANVAS_UPDATED',
  CANVAS_DELETED: 'CANVAS_DELETED',
  CANVAS_SHARED: 'CANVAS_SHARED',
  CANVAS_VISIBILITY_CHANGED: 'CANVAS_VISIBILITY_CHANGED',
  POD_CREATED: 'POD_CREATED',
  POD_UPDATED: 'POD_UPDATED',
  POD_DELETED: 'POD_DELETED',
  POD_MOVED: 'POD_MOVED',
  POD_EXECUTED: 'POD_EXECUTED',
  POD_LOCKED: 'POD_LOCKED',
  POD_UNLOCKED: 'POD_UNLOCKED',
  EDGE_CREATED: 'EDGE_CREATED',
  EDGE_DELETED: 'EDGE_DELETED',
  COLLABORATOR_ADDED: 'COLLABORATOR_ADDED',
  COLLABORATOR_REMOVED: 'COLLABORATOR_REMOVED',
  COLLABORATOR_PERMISSIONS_CHANGED: 'COLLABORATOR_PERMISSIONS_CHANGED',
  COMMENT_ADDED: 'COMMENT_ADDED',
  COMMENT_RESOLVED: 'COMMENT_RESOLVED',
  USER_JOINED: 'USER_JOINED',
  USER_LEFT: 'USER_LEFT'
};

exports.AuthProvider = exports.$Enums.AuthProvider = {
  GOOGLE: 'GOOGLE',
  GITHUB: 'GITHUB',
  EMAIL: 'EMAIL'
};

exports.WorkspaceType = exports.$Enums.WorkspaceType = {
  PERSONAL: 'PERSONAL',
  TEAM: 'TEAM'
};

exports.WorkspaceRole = exports.$Enums.WorkspaceRole = {
  OWNER: 'OWNER',
  ADMIN: 'ADMIN',
  MEMBER: 'MEMBER',
  VIEWER: 'VIEWER'
};

exports.InvitationStatus = exports.$Enums.InvitationStatus = {
  PENDING: 'PENDING',
  ACCEPTED: 'ACCEPTED',
  DECLINED: 'DECLINED',
  EXPIRED: 'EXPIRED',
  REVOKED: 'REVOKED'
};

exports.ShareAccessLevel = exports.$Enums.ShareAccessLevel = {
  VIEW_ONLY: 'VIEW_ONLY',
  COMMENT: 'COMMENT',
  EDIT: 'EDIT'
};

exports.LLMProvider = exports.$Enums.LLMProvider = {
  OPENAI: 'OPENAI',
  ANTHROPIC: 'ANTHROPIC',
  GOOGLE_GEMINI: 'GOOGLE_GEMINI',
  PERPLEXITY: 'PERPLEXITY',
  MISTRAL: 'MISTRAL',
  META_AI: 'META_AI',
  XAI: 'XAI',
  DEEPSEEK: 'DEEPSEEK',
  COHERE: 'COHERE',
  GROQ: 'GROQ',
  TOGETHER: 'TOGETHER',
  REPLICATE: 'REPLICATE',
  HUGGINGFACE: 'HUGGINGFACE',
  OPENROUTER: 'OPENROUTER',
  BEDROCK: 'BEDROCK',
  OLLAMA: 'OLLAMA',
  VLLM: 'VLLM',
  LLAMACPP: 'LLAMACPP',
  TEXTGEN_WEBUI: 'TEXTGEN_WEBUI',
  CUSTOM: 'CUSTOM'
};

exports.AuthType = exports.$Enums.AuthType = {
  BEARER_TOKEN: 'BEARER_TOKEN',
  API_KEY_HEADER: 'API_KEY_HEADER',
  BASIC_AUTH: 'BASIC_AUTH',
  OAUTH2: 'OAUTH2',
  AWS_SIGV4: 'AWS_SIGV4',
  CUSTOM_HEADER: 'CUSTOM_HEADER'
};

exports.ShareableAssetType = exports.$Enums.ShareableAssetType = {
  CANVAS: 'CANVAS',
  CONTEXT_MODULE: 'CONTEXT_MODULE'
};

exports.DocumentStatus = exports.$Enums.DocumentStatus = {
  UPLOADING: 'UPLOADING',
  PROCESSING: 'PROCESSING',
  READY: 'READY',
  ERROR: 'ERROR',
  ARCHIVED: 'ARCHIVED'
};

exports.Prisma.ModelName = {
  Admin: 'Admin',
  AdminSession: 'AdminSession',
  AdminAuditLog: 'AdminAuditLog',
  AdminPermission: 'AdminPermission',
  AdminAPIKey: 'AdminAPIKey',
  AdminInvitation: 'AdminInvitation',
  AdminSecurityEvent: 'AdminSecurityEvent',
  Subscription: 'Subscription',
  CreditPurchase: 'CreditPurchase',
  CreditUsageLog: 'CreditUsageLog',
  ModelPricingTier: 'ModelPricingTier',
  Canvas: 'Canvas',
  CanvasInvitation: 'CanvasInvitation',
  CanvasCollaborator: 'CanvasCollaborator',
  CanvasSession: 'CanvasSession',
  CanvasActivityLog: 'CanvasActivityLog',
  CanvasComment: 'CanvasComment',
  ActionPod: 'ActionPod',
  Edge: 'Edge',
  ActionPodExecution: 'ActionPodExecution',
  PodUsageLog: 'PodUsageLog',
  ContextModule: 'ContextModule',
  User: 'User',
  RefreshToken: 'RefreshToken',
  Account: 'Account',
  Workspace: 'Workspace',
  WorkspaceUser: 'WorkspaceUser',
  WorkspaceInvitation: 'WorkspaceInvitation',
  ProviderAPIKey: 'ProviderAPIKey',
  ShareLink: 'ShareLink',
  Document: 'Document',
  Embedding: 'Embedding'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\Zahid\\Work\\Actopod\\code\\turbo\\actopod\\packages\\schema\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      },
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x"
      },
      {
        "fromEnvVar": null,
        "value": "rhel-openssl-3.0.x"
      }
    ],
    "previewFeatures": [
      "fullTextSearchPostgres"
    ],
    "sourceFilePath": "D:\\Zahid\\Work\\Actopod\\code\\turbo\\actopod\\packages\\schema\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../.env"
  },
  "relativePath": "../prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// ==========================================\n// ADMIN SCHEMA - Admin Panel & Security\n// ==========================================\n\nmodel Admin {\n  id           String @id @default(cuid())\n  email        String @unique\n  username     String @unique @db.VarChar(50)\n  passwordHash String @db.VarChar(255)\n\n  role         AdminRole   @default(SUPPORT)\n  status       AdminStatus @default(PENDING)\n  isSuperAdmin Boolean     @default(false)\n\n  // MFA\n  requiresMfa    Boolean   @default(true)\n  mfaSecret      String?   @db.VarChar(255)\n  mfaBackupCodes Json?\n  mfaVerifiedAt  DateTime? @db.Timestamptz(6)\n\n  // IP whitelisting\n  allowedIpAddresses Json?\n\n  // Session tracking\n  lastLoginAt         DateTime? @db.Timestamptz(6)\n  lastLoginIp         String?   @db.VarChar(45)\n  failedLoginAttempts Int       @default(0)\n  lockedUntil         DateTime? @db.Timestamptz(6)\n\n  // Password management\n  passwordChangedAt   DateTime? @db.Timestamptz(6)\n  passwordResetToken  String?   @unique @db.VarChar(255)\n  passwordResetExpiry DateTime? @db.Timestamptz(6)\n\n  createdAt     DateTime  @default(now()) @db.Timestamptz(6)\n  updatedAt     DateTime  @updatedAt @db.Timestamptz(6)\n  createdBy     String?\n  deactivatedAt DateTime? @db.Timestamptz(6)\n  deactivatedBy String?\n\n  sessions    AdminSession[]\n  auditLogs   AdminAuditLog[]\n  permissions AdminPermission[]\n  apiKeys     AdminAPIKey[]\n  invitations AdminInvitation[] @relation(\"InvitedBy\")\n\n  @@index([email, status])\n  @@index([username])\n  @@index([status, role])\n  @@index([lastLoginAt])\n  @@schema(\"admin\")\n}\n\nmodel AdminSession {\n  id                String  @id @default(cuid())\n  adminId           String\n  token             String  @unique @db.VarChar(255)\n  refreshToken      String? @unique @db.VarChar(255)\n  ipAddress         String  @db.VarChar(45)\n  userAgent         String  @db.VarChar(500)\n  deviceFingerprint String? @db.VarChar(255)\n\n  createdAt      DateTime  @default(now()) @db.Timestamptz(6)\n  expiresAt      DateTime  @db.Timestamptz(6)\n  lastActivityAt DateTime  @default(now()) @db.Timestamptz(6)\n  revokedAt      DateTime? @db.Timestamptz(6)\n  revokedReason  String?   @db.VarChar(255)\n\n  admin Admin @relation(fields: [adminId], references: [id], onDelete: Cascade)\n\n  @@index([adminId, revokedAt, expiresAt])\n  @@index([token])\n  @@index([expiresAt])\n  @@index([ipAddress, createdAt])\n  @@schema(\"admin\")\n}\n\nmodel AdminAuditLog {\n  id              String        @id @default(cuid())\n  adminId         String?\n  action          AdminAction\n  resource        AdminResource\n  resourceId      String?       @db.VarChar(255)\n  method          String        @db.VarChar(10)\n  endpoint        String        @db.VarChar(500)\n  ipAddress       String        @db.VarChar(45)\n  userAgent       String?       @db.VarChar(500)\n  changesBefore   Json?\n  changesAfter    Json?\n  status          Int\n  errorMessage    String?       @db.Text\n  metadata        Json?\n  executionTimeMs Int?\n  createdAt       DateTime      @default(now()) @db.Timestamptz(6)\n\n  admin Admin? @relation(fields: [adminId], references: [id], onDelete: SetNull)\n\n  @@index([adminId, createdAt(sort: Desc)])\n  @@index([action, createdAt(sort: Desc)])\n  @@index([resource, resourceId])\n  @@index([ipAddress, createdAt(sort: Desc)])\n  @@index([createdAt(sort: Desc)])\n  @@schema(\"admin\")\n}\n\nmodel AdminPermission {\n  id         String             @id @default(cuid())\n  adminId    String\n  permission SpecificPermission\n  resource   AdminResource?\n  grantedAt  DateTime           @default(now()) @db.Timestamptz(6)\n  grantedBy  String?\n  expiresAt  DateTime?          @db.Timestamptz(6)\n\n  admin Admin @relation(fields: [adminId], references: [id], onDelete: Cascade)\n\n  @@unique([adminId, permission, resource])\n  @@index([adminId])\n  @@index([permission, resource])\n  @@index([expiresAt])\n  @@schema(\"admin\")\n}\n\nmodel AdminAPIKey {\n  id         String @id @default(cuid())\n  adminId    String\n  name       String @db.VarChar(100)\n  keyHash    String @unique @db.VarChar(255)\n  keyPrefix  String @db.VarChar(20)\n  scopes     Json\n  rateLimit  Int?\n  allowedIps Json?\n\n  createdAt  DateTime  @default(now()) @db.Timestamptz(6)\n  lastUsedAt DateTime? @db.Timestamptz(6)\n  expiresAt  DateTime? @db.Timestamptz(6)\n  revokedAt  DateTime? @db.Timestamptz(6)\n\n  admin Admin @relation(fields: [adminId], references: [id], onDelete: Cascade)\n\n  @@index([adminId])\n  @@index([keyHash])\n  @@index([expiresAt, revokedAt])\n  @@schema(\"admin\")\n}\n\nmodel AdminInvitation {\n  id         String    @id @default(cuid())\n  email      String    @db.VarChar(255)\n  role       AdminRole\n  token      String    @unique @db.VarChar(255)\n  invitedBy  String\n  createdAt  DateTime  @default(now()) @db.Timestamptz(6)\n  expiresAt  DateTime  @db.Timestamptz(6)\n  acceptedAt DateTime? @db.Timestamptz(6)\n\n  inviter Admin @relation(\"InvitedBy\", fields: [invitedBy], references: [id])\n\n  @@index([token, expiresAt])\n  @@index([email])\n  @@schema(\"admin\")\n}\n\nmodel AdminSecurityEvent {\n  id          String            @id @default(cuid())\n  eventType   SecurityEventType\n  severity    SecuritySeverity\n  adminId     String?\n  ipAddress   String            @db.VarChar(45)\n  userAgent   String?           @db.VarChar(500)\n  description String            @db.Text\n  metadata    Json?\n  resolved    Boolean           @default(false)\n  resolvedAt  DateTime?         @db.Timestamptz(6)\n  resolvedBy  String?\n  createdAt   DateTime          @default(now()) @db.Timestamptz(6)\n\n  @@index([eventType, severity, createdAt(sort: Desc)])\n  @@index([adminId, createdAt(sort: Desc)])\n  @@index([resolved, severity])\n  @@index([ipAddress, createdAt(sort: Desc)])\n  @@schema(\"admin\")\n}\n\nenum AdminRole {\n  SUPER_ADMIN\n  ADMIN\n  FINANCE\n  SUPPORT\n  DEVELOPER\n  ANALYST\n\n  @@schema(\"admin\")\n}\n\nenum AdminStatus {\n  PENDING\n  ACTIVE\n  SUSPENDED\n  DEACTIVATED\n  LOCKED\n\n  @@schema(\"admin\")\n}\n\nenum AdminAction {\n  USER_CREATED\n  USER_UPDATED\n  USER_DELETED\n  USER_SUSPENDED\n  WORKSPACE_DELETED\n  SUBSCRIPTION_UPDATED\n  SUBSCRIPTION_CANCELLED\n  CREDITS_ADDED\n  CREDITS_REMOVED\n  REFUND_ISSUED\n  MODEL_ADDED\n  MODEL_UPDATED\n  PRICING_CHANGED\n  ADMIN_INVITED\n  ADMIN_CREATED\n  ADMIN_ROLE_CHANGED\n  PERMISSION_GRANTED\n  SESSION_REVOKED\n  CONFIG_CHANGED\n  DATA_EXPORTED\n\n  @@schema(\"admin\")\n}\n\nenum AdminResource {\n  USER\n  WORKSPACE\n  SUBSCRIPTION\n  CREDIT\n  MODEL\n  ADMIN\n  PERMISSION\n  SESSION\n  API_KEY\n  CANVAS\n  ACTION_POD\n  DOCUMENT\n  AUDIT_LOG\n  SYSTEM_CONFIG\n\n  @@schema(\"admin\")\n}\n\nenum SpecificPermission {\n  USER_VIEW\n  USER_UPDATE\n  USER_DELETE\n  USER_SUSPEND\n  WORKSPACE_VIEW\n  WORKSPACE_DELETE\n  BILLING_VIEW\n  BILLING_MANAGE\n  CREDITS_MANAGE\n  REFUND_ISSUE\n  MODEL_VIEW\n  MODEL_MANAGE\n  PRICING_MANAGE\n  ADMIN_VIEW\n  ADMIN_INVITE\n  ADMIN_MANAGE\n  SYSTEM_CONFIG_VIEW\n  SYSTEM_CONFIG_MANAGE\n  AUDIT_LOG_VIEW\n  AUDIT_LOG_EXPORT\n  DATA_EXPORT\n  DATA_DELETE\n\n  @@schema(\"admin\")\n}\n\nenum SecurityEventType {\n  FAILED_LOGIN\n  MULTIPLE_FAILED_LOGINS\n  SUSPICIOUS_IP\n  ACCOUNT_LOCKED\n  MFA_FAILED\n  UNAUTHORIZED_ACCESS_ATTEMPT\n\n  @@schema(\"admin\")\n}\n\nenum SecuritySeverity {\n  LOW\n  MEDIUM\n  HIGH\n  CRITICAL\n\n  @@schema(\"admin\")\n}\n\n// ==========================================\n// BILLING SCHEMA - Subscriptions & Pricing\n// ==========================================\n\nmodel Subscription {\n  id          String             @id @default(cuid())\n  workspaceId String             @unique\n  tier        SubscriptionTier   @default(HOBBYIST)\n  status      SubscriptionStatus @default(ACTIVE)\n\n  // Stripe integration\n  stripeCustomerId     String? @unique\n  stripeSubscriptionId String? @unique\n\n  // Canvas Credits\n  credits            Int       @default(0)\n  monthlyCreditQuota Int       @default(0)\n  creditResetDate    DateTime? @db.Timestamptz(6)\n\n  // Usage limits per tier\n  maxCanvases               Int @default(3) // HOBBYIST: 3, PRO: 999\n  maxActionPodsPerCanvas    Int @default(50) // HOBBYIST: 50, PRO: 999\n  maxDocumentSizeInMB       Int @default(10) // HOBBYIST: 10MB, PRO: 100MB\n  maxCollaboratorsPerCanvas Int @default(0) // HOBBYIST: 0, PRO: 10, TEAM: 999\n\n  // Feature flags\n  canInviteToWorkspace Boolean @default(false) // PRO/TEAM only\n  canInviteToCanvas    Boolean @default(false) // PRO/TEAM only\n  canCreatePublicLinks Boolean @default(true) // All tiers\n  canUseAdvancedModels Boolean @default(false) // HOBBYIST: BYOK only\n  canAccessAnalytics   Boolean @default(false) // PRO/TEAM only\n  canExportData        Boolean @default(false) // PRO/TEAM only\n\n  // Billing cycle\n  nextBillingDate    DateTime? @db.Timestamptz(6)\n  currentPeriodStart DateTime? @db.Timestamptz(6)\n  currentPeriodEnd   DateTime? @db.Timestamptz(6)\n  cancelAtPeriodEnd  Boolean   @default(false)\n\n  // BYOK mode\n  isByokMode Boolean @default(false)\n\n  createdAt DateTime @default(now()) @db.Timestamptz(6)\n  updatedAt DateTime @updatedAt @db.Timestamptz(6)\n\n  workspace       Workspace        @relation(fields: [workspaceId], references: [id], onDelete: Cascade)\n  usageLogs       PodUsageLog[]\n  creditPurchases CreditPurchase[]\n  creditUsage     CreditUsageLog[]\n\n  @@index([status, nextBillingDate])\n  @@index([tier, status])\n  @@index([creditResetDate])\n  @@schema(\"billing\")\n}\n\nmodel CreditPurchase {\n  id               String   @id @default(cuid())\n  subscriptionId   String\n  creditsPurchased Int\n  amountPaid       Decimal  @db.Decimal(10, 2)\n  currency         String   @default(\"USD\") @db.VarChar(3)\n  stripeChargeId   String   @unique\n  status           String   @default(\"succeeded\") @db.VarChar(50)\n  purchasedAt      DateTime @default(now()) @db.Timestamptz(6)\n\n  subscription Subscription @relation(fields: [subscriptionId], references: [id], onDelete: Cascade)\n\n  @@index([subscriptionId, purchasedAt(sort: Desc)])\n  @@index([stripeChargeId])\n  @@schema(\"billing\")\n}\n\nmodel CreditUsageLog {\n  id             String @id @default(cuid())\n  subscriptionId String\n  workspaceId    String\n  canvasId       String\n  podId          String\n  executionId    String\n\n  creditsUsed   Int @default(0)\n  balanceBefore Int\n  balanceAfter  Int\n\n  provider  LLMProvider\n  modelId   String      @db.VarChar(255)\n  modelName String?     @db.VarChar(255)\n\n  createdAt DateTime @default(now()) @db.Timestamptz(6)\n\n  subscription Subscription @relation(fields: [subscriptionId], references: [id], onDelete: Cascade)\n\n  @@index([subscriptionId, createdAt(sort: Desc)])\n  @@index([workspaceId, createdAt(sort: Desc)])\n  @@index([executionId])\n  @@index([provider, modelId, createdAt(sort: Desc)])\n  @@schema(\"billing\")\n}\n\nmodel ModelPricingTier {\n  id       String        @id @default(cuid())\n  provider LLMProvider\n  modelId  String        @db.VarChar(255)\n  category ModelCategory\n\n  displayName String  @db.VarChar(255)\n  description String? @db.VarChar(500)\n\n  inputTokenCost     Decimal @db.Decimal(12, 8)\n  outputTokenCost    Decimal @db.Decimal(12, 8)\n  reasoningTokenCost Decimal @default(0) @db.Decimal(12, 8)\n\n  creditsPerMillionInputTokens     Int\n  creditsPerMillionOutputTokens    Int\n  creditsPerMillionReasoningTokens Int @default(0)\n\n  maxTokens            Int?\n  maxOutputTokens      Int?\n  supportsStreaming    Boolean @default(true)\n  supportsVision       Boolean @default(false)\n  supportsAudio        Boolean @default(false)\n  supportsVideo        Boolean @default(false)\n  supportsFunctions    Boolean @default(false)\n  supportsJsonMode     Boolean @default(false)\n  supportsSystemPrompt Boolean @default(true)\n\n  providerConfig Json?\n\n  isActive       Boolean   @default(true)\n  effectiveFrom  DateTime  @db.Timestamptz(6)\n  effectiveUntil DateTime? @db.Timestamptz(6)\n\n  createdAt DateTime @default(now()) @db.Timestamptz(6)\n  updatedAt DateTime @updatedAt @db.Timestamptz(6)\n\n  @@unique([provider, modelId, effectiveFrom])\n  @@index([provider, modelId, isActive, effectiveFrom])\n  @@index([provider, category, isActive])\n  @@index([isActive, effectiveFrom])\n  @@index([category, isActive])\n  @@schema(\"billing\")\n}\n\nenum SubscriptionTier {\n  HOBBYIST // FREE\n  PRO // $20/month\n  TEAM // $50/user/month\n\n  @@schema(\"billing\")\n}\n\nenum SubscriptionStatus {\n  ACTIVE\n  CANCELED\n  PAST_DUE\n  TRIALING\n  INCOMPLETE\n  PAUSED\n\n  @@schema(\"billing\")\n}\n\nenum ModelCategory {\n  WORKHORSE\n  POWERHOUSE\n  REASONING\n  SPECIALIST\n  IMAGE_GEN\n  VIDEO_GEN\n  AUDIO_GEN\n  EMBEDDING\n  RERANKING\n  MODERATION\n  SEARCH\n  TRANSLATION\n\n  @@schema(\"billing\")\n}\n\nmodel Canvas {\n  id          String           @id @default(cuid())\n  workspaceId String\n  name        String           @db.VarChar(255)\n  description String?          @db.VarChar(500)\n  version     Int              @default(1)\n  visibility  CanvasVisibility @default(PRIVATE)\n\n  createdBy String\n\n  // Thumbnail for sharing (S3 key)\n  thumbnailS3Key       String?   @db.VarChar(512)\n  thumbnailGeneratedAt DateTime? @db.Timestamptz(6)\n\n  createdAt DateTime @default(now()) @db.Timestamptz(6)\n  updatedAt DateTime @updatedAt @db.Timestamptz(6)\n\n  workspace      Workspace            @relation(fields: [workspaceId], references: [id], onDelete: Cascade)\n  actionPods     ActionPod[]\n  edges          Edge[]\n  contextualPods ActionPod[]          @relation(\"CanvasAsContext\")\n  contextModules ContextModule[]      @relation(\"CanvasOriginal\")\n  collaborators  CanvasCollaborator[]\n  invitations    CanvasInvitation[]\n  sessions       CanvasSession[]\n  activityLog    CanvasActivityLog[]\n  comments       CanvasComment[]\n\n  @@index([workspaceId, updatedAt(sort: Desc)])\n  @@index([workspaceId, createdAt(sort: Desc)])\n  @@index([workspaceId, visibility])\n  @@index([createdBy, createdAt(sort: Desc)])\n  @@schema(\"canvas\")\n}\n\nmodel CanvasInvitation {\n  id       String @id @default(cuid())\n  canvasId String\n  email    String @db.VarChar(255)\n\n  accessLevel CanvasAccessLevel @default(EDITOR)\n  permissions Json? // Custom permission overrides\n\n  invitedBy     String\n  invitedUserId String?\n\n  token  String           @unique @db.VarChar(255)\n  status InvitationStatus @default(PENDING)\n\n  createdAt  DateTime  @default(now()) @db.Timestamptz(6)\n  expiresAt  DateTime  @db.Timestamptz(6)\n  acceptedAt DateTime? @db.Timestamptz(6)\n\n  canvas      Canvas @relation(fields: [canvasId], references: [id], onDelete: Cascade)\n  inviter     User   @relation(\"CanvasInvitedBy\", fields: [invitedBy], references: [id], onDelete: Cascade)\n  invitedUser User?  @relation(\"CanvasInvitedUser\", fields: [invitedUserId], references: [id], onDelete: SetNull)\n\n  @@index([canvasId, status])\n  @@index([email, status])\n  @@index([token, expiresAt])\n  @@schema(\"canvas\")\n}\n\nmodel CanvasCollaborator {\n  id       String @id @default(cuid())\n  canvasId String\n  userId   String\n\n  accessLevel CanvasAccessLevel @default(EDITOR)\n\n  // Granular permissions\n  canEdit    Boolean @default(true)\n  canExecute Boolean @default(true)\n  canDelete  Boolean @default(false)\n  canShare   Boolean @default(false) // Can create public links (FREE)\n  canInvite  Boolean @default(false) // Can invite collaborators (PAID)\n\n  invitedBy    String?\n  invitedAt    DateTime  @default(now()) @db.Timestamptz(6)\n  lastViewedAt DateTime? @db.Timestamptz(6)\n\n  canvas Canvas @relation(fields: [canvasId], references: [id], onDelete: Cascade)\n  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([canvasId, userId])\n  @@index([userId])\n  @@index([canvasId, accessLevel])\n  @@schema(\"canvas\")\n}\n\nmodel CanvasSession {\n  id       String  @id @default(cuid())\n  canvasId String\n  userId   String? // null for anonymous viewers\n\n  // Anonymous session support\n  anonymousName String? @db.VarChar(100)\n  sessionToken  String? @unique @db.VarChar(255)\n\n  // Real-time presence\n  socketId       String? @db.VarChar(255)\n  cursorPosition Json? // {x: number, y: number}\n  selectedPodIds Json? // Array of selected action pod IDs\n  viewportState  Json? // {zoom: number, x: number, y: number}\n\n  userColor String? @db.VarChar(7) // Hex color for cursor\n\n  // Session metadata\n  userAgent String? @db.VarChar(500)\n  ipAddress String? @db.VarChar(45)\n\n  // Lifecycle\n  connectedAt     DateTime  @default(now()) @db.Timestamptz(6)\n  lastHeartbeatAt DateTime  @default(now()) @db.Timestamptz(6)\n  disconnectedAt  DateTime? @db.Timestamptz(6)\n\n  canvas Canvas @relation(fields: [canvasId], references: [id], onDelete: Cascade)\n\n  @@index([canvasId, disconnectedAt])\n  @@index([socketId])\n  @@index([canvasId, userId, disconnectedAt])\n  @@index([lastHeartbeatAt]) // For stale session cleanup\n  @@index([sessionToken])\n  @@schema(\"canvas\")\n}\n\nmodel CanvasActivityLog {\n  id       String  @id @default(cuid())\n  canvasId String\n  userId   String? // null for anonymous\n\n  action CanvasActivityAction\n\n  entityType String? @db.VarChar(50) // 'action_pod', 'edge', 'canvas'\n  entityId   String? @db.VarChar(255)\n\n  changeData Json? // {before: {...}, after: {...}}\n\n  createdAt DateTime @default(now()) @db.Timestamptz(6)\n\n  canvas Canvas @relation(fields: [canvasId], references: [id], onDelete: Cascade)\n\n  @@index([canvasId, createdAt(sort: Desc)])\n  @@index([userId, createdAt(sort: Desc)])\n  @@index([action, createdAt(sort: Desc)])\n  @@schema(\"canvas\")\n}\n\nmodel CanvasComment {\n  id       String  @id @default(cuid())\n  canvasId String\n  userId   String?\n\n  content  String  @db.Text\n  position Json? // {x: number, y: number}\n  podId    String? // Attached to specific pod\n\n  parentId String? // Thread support\n\n  isResolved Boolean   @default(false)\n  resolvedBy String?\n  resolvedAt DateTime? @db.Timestamptz(6)\n\n  createdAt DateTime @default(now()) @db.Timestamptz(6)\n  updatedAt DateTime @updatedAt @db.Timestamptz(6)\n\n  canvas Canvas @relation(fields: [canvasId], references: [id], onDelete: Cascade)\n\n  @@index([canvasId, createdAt(sort: Desc)])\n  @@index([userId, createdAt(sort: Desc)])\n  @@index([podId])\n  @@index([parentId])\n  @@index([isResolved])\n  @@schema(\"canvas\")\n}\n\nmodel ActionPod {\n  id              String                   @id @default(cuid())\n  canvasId        String\n  type            ActionPodType\n  position        Json\n  executionStatus ActionPodExecutionStatus @default(IDLE)\n  lastExecutionId String?\n  contextCanvasId String?\n  documentId      String?\n\n  // Real-time collaboration lock\n  lockedBy String? // userId or sessionToken\n  lockedAt DateTime? @db.Timestamptz(6)\n\n  // DynamoDB keys for pod content\n  dynamoPartitionKey String @db.VarChar(255) // \"WORKSPACE#{workspaceId}\"\n  dynamoSortKey      String @db.VarChar(255) // \"CANVAS#{canvasId}#POD#{podId}#{ts}\"\n\n  // S3 Vectors for embeddings\n  s3VectorBucket String? @db.VarChar(255)\n  s3VectorKey    String? @db.VarChar(512)\n\n  createdAt DateTime @default(now()) @db.Timestamptz(6)\n  updatedAt DateTime @updatedAt @db.Timestamptz(6)\n\n  canvas        Canvas               @relation(fields: [canvasId], references: [id], onDelete: Cascade)\n  contextCanvas Canvas?              @relation(\"CanvasAsContext\", fields: [contextCanvasId], references: [id], onDelete: SetNull)\n  document      Document?            @relation(fields: [documentId], references: [id], onDelete: SetNull)\n  sourceEdges   Edge[]               @relation(\"SourcePod\")\n  targetEdges   Edge[]               @relation(\"TargetPod\")\n  executions    ActionPodExecution[]\n  usageLogs     PodUsageLog[]\n\n  @@unique([dynamoPartitionKey, dynamoSortKey])\n  @@index([canvasId, type, executionStatus])\n  @@index([contextCanvasId])\n  @@index([documentId])\n  @@index([executionStatus, updatedAt])\n  @@index([s3VectorBucket, s3VectorKey])\n  @@index([lockedBy, lockedAt])\n  @@schema(\"canvas\")\n}\n\nmodel Edge {\n  id           String   @id @default(cuid())\n  canvasId     String\n  sourcePodId  String\n  targetPodId  String\n  sourceHandle String?  @db.VarChar(100)\n  targetHandle String?  @db.VarChar(100)\n  animated     Boolean  @default(false)\n  createdAt    DateTime @default(now()) @db.Timestamptz(6)\n\n  canvas    Canvas    @relation(fields: [canvasId], references: [id], onDelete: Cascade)\n  sourcePod ActionPod @relation(\"SourcePod\", fields: [sourcePodId], references: [id], onDelete: Cascade)\n  targetPod ActionPod @relation(\"TargetPod\", fields: [targetPodId], references: [id], onDelete: Cascade)\n\n  @@unique([canvasId, sourcePodId, sourceHandle, targetPodId, targetHandle])\n  @@index([canvasId])\n  @@index([sourcePodId])\n  @@index([targetPodId])\n  @@schema(\"canvas\")\n}\n\nmodel ActionPodExecution {\n  id          String                   @id @default(cuid())\n  podId       String\n  canvasId    String\n  workspaceId String\n  status      ActionPodExecutionStatus @default(RUNNING)\n  startedAt   DateTime                 @default(now()) @db.Timestamptz(6)\n  finishedAt  DateTime?                @db.Timestamptz(6)\n  runtimeInMs Int?\n\n  provider  LLMProvider\n  modelId   String      @db.VarChar(255)\n  modelName String?     @db.VarChar(255)\n\n  providerMetadata Json?\n  requestMetadata  Json?\n  responseMetadata Json?\n\n  errorMessage String? @db.Text\n  errorCode    String? @db.VarChar(100)\n\n  inputTokens     Int @default(0)\n  outputTokens    Int @default(0)\n  reasoningTokens Int @default(0)\n\n  creditsConsumed Int @default(0)\n\n  costInUsd Decimal? @db.Decimal(12, 8)\n\n  pod ActionPod @relation(fields: [podId], references: [id], onDelete: Cascade)\n\n  @@index([podId, startedAt(sort: Desc)])\n  @@index([workspaceId, status, startedAt(sort: Desc)])\n  @@index([canvasId, status, startedAt(sort: Desc)])\n  @@index([status, startedAt])\n  @@index([provider, modelId, startedAt(sort: Desc)])\n  @@index([provider, status])\n  @@schema(\"canvas\")\n}\n\nmodel PodUsageLog {\n  id             String @id @default(cuid())\n  podId          String\n  executionId    String\n  canvasId       String\n  workspaceId    String\n  subscriptionId String\n\n  provider  LLMProvider\n  modelId   String      @db.VarChar(255)\n  modelName String?     @db.VarChar(255)\n\n  providerMetadata Json?\n\n  inputTokens     Int  @default(0)\n  outputTokens    Int  @default(0)\n  reasoningTokens Int  @default(0)\n  creditsConsumed Int  @default(0)\n  runtimeInMs     Int?\n\n  inputTokenCost     Decimal @db.Decimal(12, 8)\n  outputTokenCost    Decimal @db.Decimal(12, 8)\n  reasoningTokenCost Decimal @db.Decimal(12, 8)\n  totalCostInUsd     Decimal @db.Decimal(12, 8)\n\n  executedAt DateTime @default(now()) @db.Timestamptz(6)\n\n  pod          ActionPod    @relation(fields: [podId], references: [id], onDelete: Cascade)\n  subscription Subscription @relation(fields: [subscriptionId], references: [id], onDelete: Cascade)\n\n  @@index([workspaceId, executedAt(sort: Desc)])\n  @@index([subscriptionId, executedAt(sort: Desc)])\n  @@index([executionId])\n  @@index([podId, executedAt(sort: Desc)])\n  @@index([canvasId, executedAt(sort: Desc)])\n  @@index([provider, modelId, executedAt(sort: Desc)])\n  @@index([provider, executedAt(sort: Desc)])\n  @@schema(\"canvas\")\n}\n\nmodel ContextModule {\n  id               String   @id @default(cuid())\n  workspaceId      String\n  name             String   @db.VarChar(255)\n  description      String?  @db.VarChar(1000)\n  definitionJson   Json\n  originalCanvasId String?\n  version          Int      @default(1)\n  createdAt        DateTime @default(now()) @db.Timestamptz(6)\n  updatedAt        DateTime @updatedAt @db.Timestamptz(6)\n\n  workspace      Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)\n  originalCanvas Canvas?   @relation(\"CanvasOriginal\", fields: [originalCanvasId], references: [id], onDelete: SetNull)\n\n  @@index([workspaceId, updatedAt(sort: Desc)])\n  @@index([originalCanvasId])\n  @@schema(\"canvas\")\n}\n\nenum ActionPodType {\n  TEXT_INPUT\n  DOCUMENT_INPUT\n  URL_INPUT\n  IMAGE_INPUT\n  VIDEO_INPUT\n  AUDIO_INPUT\n  LLM_PROMPT\n  EMBEDDING_POD\n  TOOL_POD\n  TEXT_OUTPUT\n  IMAGE_OUTPUT\n  VIDEO_OUTPUT\n  AUDIO_OUTPUT\n  CONTEXT_MODULE\n  CANVAS_CONTEXT_INPUT\n  CODE_EXECUTION\n\n  @@schema(\"canvas\")\n}\n\nenum ActionPodExecutionStatus {\n  IDLE\n  QUEUED\n  RUNNING\n  PAUSED\n  COMPLETED\n  ERROR\n  CANCELLED\n\n  @@schema(\"canvas\")\n}\n\nenum CanvasVisibility {\n  PRIVATE\n  WORKSPACE\n  PUBLIC // FREE FEATURE\n\n  @@schema(\"canvas\")\n}\n\nenum CanvasAccessLevel {\n  VIEWER\n  COMMENTER\n  EDITOR\n  OWNER\n\n  @@schema(\"canvas\")\n}\n\nenum CanvasActivityAction {\n  CANVAS_CREATED\n  CANVAS_UPDATED\n  CANVAS_DELETED\n  CANVAS_SHARED\n  CANVAS_VISIBILITY_CHANGED\n\n  POD_CREATED\n  POD_UPDATED\n  POD_DELETED\n  POD_MOVED\n  POD_EXECUTED\n  POD_LOCKED\n  POD_UNLOCKED\n\n  EDGE_CREATED\n  EDGE_DELETED\n\n  COLLABORATOR_ADDED\n  COLLABORATOR_REMOVED\n  COLLABORATOR_PERMISSIONS_CHANGED\n\n  COMMENT_ADDED\n  COMMENT_RESOLVED\n\n  USER_JOINED\n  USER_LEFT\n\n  @@schema(\"canvas\")\n}\n\n// ==========================================\n// CORE SCHEMA - Users, Auth, Workspaces\n// ==========================================\n\nmodel User {\n  id        String   @id @default(cuid())\n  email     String   @unique\n  name      String?\n  image     String?\n  hash      String?  @db.VarChar(255) // For email authS\n  createdAt DateTime @default(now()) @db.Timestamptz(6)\n  updatedAt DateTime @updatedAt @db.Timestamptz(6)\n\n  accounts                 Account[]\n  workspaces               WorkspaceUser[]\n  refreshTokens            RefreshToken[]\n  canvasCollaborations     CanvasCollaborator[]\n  sentWorkspaceInvites     WorkspaceInvitation[] @relation(\"InvitedBy\")\n  receivedWorkspaceInvites WorkspaceInvitation[] @relation(\"InvitedUser\")\n  sentCanvasInvites        CanvasInvitation[]    @relation(\"CanvasInvitedBy\")\n  receivedCanvasInvites    CanvasInvitation[]    @relation(\"CanvasInvitedUser\")\n\n  @@index([email])\n  @@schema(\"core\")\n}\n\nmodel RefreshToken {\n  id        String   @id @default(cuid())\n  token     String   @unique\n  deviceId  String   @db.VarChar(255)\n  userId    String\n  expiresAt DateTime @db.Timestamptz(6)\n  createdAt DateTime @default(now()) @db.Timestamptz(6)\n  updatedAt DateTime @updatedAt @db.Timestamptz(6)\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, deviceId])\n  @@index([userId, expiresAt])\n  @@index([token, expiresAt])\n  @@schema(\"core\")\n}\n\nmodel Account {\n  id                String       @id @default(cuid())\n  userId            String\n  provider          AuthProvider\n  providerAccountId String\n  accessToken       String?      @db.Text\n  refreshToken      String?      @db.Text\n  expiresAt         DateTime?    @db.Timestamptz(6)\n  createdAt         DateTime     @default(now()) @db.Timestamptz(6)\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([provider, providerAccountId])\n  @@index([userId])\n  @@schema(\"core\")\n}\n\nmodel Workspace {\n  id        String        @id @default(cuid())\n  name      String        @db.VarChar(255)\n  type      WorkspaceType @default(PERSONAL)\n  createdAt DateTime      @default(now()) @db.Timestamptz(6)\n  updatedAt DateTime      @updatedAt @db.Timestamptz(6)\n\n  members        WorkspaceUser[]\n  canvases       Canvas[]\n  documents      Document[]\n  subscription   Subscription?\n  contextModules ContextModule[]\n  shareLinks     ShareLink[]\n  apiKeys        ProviderAPIKey[]\n  invitations    WorkspaceInvitation[]\n\n  @@index([type, createdAt])\n  @@schema(\"core\")\n}\n\nmodel WorkspaceUser {\n  id          String        @id @default(cuid())\n  userId      String\n  workspaceId String\n  role        WorkspaceRole @default(MEMBER)\n\n  // Granular permissions\n  canCreateCanvas  Boolean @default(true)\n  canDeleteCanvas  Boolean @default(false)\n  canManageBilling Boolean @default(false)\n  canInviteMembers Boolean @default(false) // Requires PAID plan\n  canManageMembers Boolean @default(false)\n  canManageApiKeys Boolean @default(false)\n\n  joinedAt  DateTime @default(now()) @db.Timestamptz(6)\n  invitedBy String? // userId who invited\n\n  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)\n  workspace Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, workspaceId])\n  @@index([workspaceId, role])\n  @@index([userId])\n  @@schema(\"core\")\n}\n\nmodel WorkspaceInvitation {\n  id          String        @id @default(cuid())\n  workspaceId String\n  email       String        @db.VarChar(255)\n  role        WorkspaceRole @default(MEMBER)\n  permissions Json? // Custom permissions override\n\n  invitedBy     String\n  invitedUserId String? // If user exists in system\n\n  token  String           @unique @db.VarChar(255)\n  status InvitationStatus @default(PENDING)\n\n  createdAt  DateTime  @default(now()) @db.Timestamptz(6)\n  expiresAt  DateTime  @db.Timestamptz(6)\n  acceptedAt DateTime? @db.Timestamptz(6)\n\n  workspace   Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)\n  inviter     User      @relation(\"InvitedBy\", fields: [invitedBy], references: [id], onDelete: Cascade)\n  invitedUser User?     @relation(\"InvitedUser\", fields: [invitedUserId], references: [id], onDelete: SetNull)\n\n  @@index([workspaceId, status])\n  @@index([email, status])\n  @@index([token, expiresAt])\n  @@schema(\"core\")\n}\n\nmodel ProviderAPIKey {\n  id          String      @id @default(cuid())\n  workspaceId String\n  provider    LLMProvider\n  displayName String      @db.VarChar(100)\n\n  keyHash String @db.VarChar(255) // Encrypted\n\n  providerConfig Json? // Provider-specific config\n  endpoint       String?  @db.VarChar(500)\n  authType       AuthType @default(BEARER_TOKEN)\n\n  isActive   Boolean   @default(true)\n  lastUsedAt DateTime? @db.Timestamptz(6)\n  createdAt  DateTime  @default(now()) @db.Timestamptz(6)\n  expiresAt  DateTime? @db.Timestamptz(6)\n\n  workspace Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)\n\n  @@unique([workspaceId, provider, displayName])\n  @@index([workspaceId, isActive])\n  @@index([provider, isActive])\n  @@schema(\"core\")\n}\n\nmodel ShareLink {\n  id          String             @id @default(cuid())\n  publicToken String             @unique @default(cuid())\n  assetType   ShareableAssetType\n  assetId     String\n  workspaceId String\n  createdBy   String\n\n  accessLevel ShareAccessLevel @default(VIEW_ONLY)\n  password    String?          @db.VarChar(255) // Optional password protection (bcrypt hash)\n\n  // Usage tracking\n  viewCount    Int       @default(0)\n  lastViewedAt DateTime? @db.Timestamptz(6)\n\n  createdAt DateTime  @default(now()) @db.Timestamptz(6)\n  expiresAt DateTime? @db.Timestamptz(6)\n\n  workspace Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)\n\n  @@unique([assetType, assetId])\n  @@index([publicToken, expiresAt])\n  @@index([workspaceId, assetType])\n  @@index([createdBy, createdAt])\n  @@schema(\"core\")\n}\n\nenum AuthProvider {\n  GOOGLE\n  GITHUB\n  EMAIL\n\n  @@schema(\"core\")\n}\n\nenum WorkspaceType {\n  PERSONAL\n  TEAM\n\n  @@schema(\"core\")\n}\n\nenum WorkspaceRole {\n  OWNER\n  ADMIN\n  MEMBER\n  VIEWER\n\n  @@schema(\"core\")\n}\n\nenum InvitationStatus {\n  PENDING\n  ACCEPTED\n  DECLINED\n  EXPIRED\n  REVOKED\n\n  @@schema(\"core\")\n}\n\nenum ShareAccessLevel {\n  VIEW_ONLY // FREE\n  COMMENT // FREE\n  EDIT // PAID (requires collaborator)\n\n  @@schema(\"core\")\n}\n\nenum LLMProvider {\n  OPENAI\n  ANTHROPIC\n  GOOGLE_GEMINI\n  PERPLEXITY\n  MISTRAL\n  META_AI\n  XAI\n  DEEPSEEK\n  COHERE\n  GROQ\n  TOGETHER\n  REPLICATE\n  HUGGINGFACE\n  OPENROUTER\n  BEDROCK\n  OLLAMA\n  VLLM\n  LLAMACPP\n  TEXTGEN_WEBUI\n  CUSTOM\n\n  @@schema(\"core\")\n}\n\nenum AuthType {\n  BEARER_TOKEN\n  API_KEY_HEADER\n  BASIC_AUTH\n  OAUTH2\n  AWS_SIGV4\n  CUSTOM_HEADER\n\n  @@schema(\"core\")\n}\n\nenum ShareableAssetType {\n  CANVAS\n  CONTEXT_MODULE\n\n  @@schema(\"core\")\n}\n\n// ==========================================\n// DOCUMENTS SCHEMA - File Storage & Embeddings\n// ==========================================\n\nmodel Document {\n  id          String @id @default(cuid())\n  workspaceId String\n  name        String @db.VarChar(255)\n\n  // S3 storage\n  storageKey String @unique @db.VarChar(512)\n  s3Bucket   String @db.VarChar(255)\n\n  fileType    String         @db.VarChar(100)\n  mimeType    String?        @db.VarChar(255)\n  sizeInBytes BigInt\n  status      DocumentStatus @default(UPLOADING)\n  uploadedBy  String?\n\n  metadata Json?\n\n  createdAt DateTime @default(now()) @db.Timestamptz(6)\n  updatedAt DateTime @updatedAt @db.Timestamptz(6)\n\n  workspace  Workspace   @relation(fields: [workspaceId], references: [id], onDelete: Cascade)\n  embeddings Embedding[]\n  actionPods ActionPod[]\n\n  @@index([workspaceId, status, createdAt(sort: Desc)])\n  @@index([storageKey])\n  @@index([status, updatedAt])\n  @@index([fileType, workspaceId])\n  @@schema(\"documents\")\n}\n\nmodel Embedding {\n  id         String @id @default(cuid())\n  documentId String\n  model      String @db.VarChar(100)\n  chunkIndex Int\n  chunkText  String @db.Text\n\n  // S3 Vectors ONLY (NO pgvector)\n  s3VectorBucket  String @db.VarChar(255)\n  s3VectorKey     String @db.VarChar(512)\n  vectorDimension Int    @default(1536)\n\n  metadata Json?\n\n  createdAt DateTime @default(now()) @db.Timestamptz(6)\n\n  document Document @relation(fields: [documentId], references: [id], onDelete: Cascade)\n\n  @@unique([documentId, chunkIndex])\n  @@unique([s3VectorBucket, s3VectorKey])\n  @@index([documentId, createdAt(sort: Desc)])\n  @@index([model, createdAt(sort: Desc)])\n  @@index([s3VectorBucket])\n  @@schema(\"documents\")\n}\n\nenum DocumentStatus {\n  UPLOADING\n  PROCESSING\n  READY\n  ERROR\n  ARCHIVED\n\n  @@schema(\"documents\")\n}\n\n// /prisma/schema.prisma\n\n// This is your main Prisma schema file.\n// It defines the database connection and the Prisma Client generator.\n// Models are organized into separate files for better maintainability.\n\ngenerator client {\n  provider        = \"prisma-client-js\"\n  output          = \"../client\"\n  binaryTargets   = [\"native\", \"debian-openssl-3.0.x\", \"rhel-openssl-3.0.x\"]\n  previewFeatures = [\"fullTextSearchPostgres\"]\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n  schemas  = [\"core\", \"canvas\", \"billing\", \"documents\", \"admin\"]\n}\n",
  "inlineSchemaHash": "f45719574f504c100cbe6bbb2d8c45f46a920b3a30bd89da4525ce08902448cb",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Admin\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"AdminRole\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"AdminStatus\"},{\"name\":\"isSuperAdmin\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"requiresMfa\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"mfaSecret\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mfaBackupCodes\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"mfaVerifiedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"allowedIpAddresses\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"lastLoginAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastLoginIp\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"failedLoginAttempts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lockedUntil\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"passwordChangedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"passwordResetToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordResetExpiry\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deactivatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deactivatedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"AdminSession\",\"relationName\":\"AdminToAdminSession\"},{\"name\":\"auditLogs\",\"kind\":\"object\",\"type\":\"AdminAuditLog\",\"relationName\":\"AdminToAdminAuditLog\"},{\"name\":\"permissions\",\"kind\":\"object\",\"type\":\"AdminPermission\",\"relationName\":\"AdminToAdminPermission\"},{\"name\":\"apiKeys\",\"kind\":\"object\",\"type\":\"AdminAPIKey\",\"relationName\":\"AdminToAdminAPIKey\"},{\"name\":\"invitations\",\"kind\":\"object\",\"type\":\"AdminInvitation\",\"relationName\":\"InvitedBy\"}],\"dbName\":null},\"AdminSession\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"adminId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refreshToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deviceFingerprint\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastActivityAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"revokedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"revokedReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"admin\",\"kind\":\"object\",\"type\":\"Admin\",\"relationName\":\"AdminToAdminSession\"}],\"dbName\":null},\"AdminAuditLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"adminId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"enum\",\"type\":\"AdminAction\"},{\"name\":\"resource\",\"kind\":\"enum\",\"type\":\"AdminResource\"},{\"name\":\"resourceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"method\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"endpoint\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"changesBefore\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"changesAfter\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"executionTimeMs\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"admin\",\"kind\":\"object\",\"type\":\"Admin\",\"relationName\":\"AdminToAdminAuditLog\"}],\"dbName\":null},\"AdminPermission\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"adminId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"permission\",\"kind\":\"enum\",\"type\":\"SpecificPermission\"},{\"name\":\"resource\",\"kind\":\"enum\",\"type\":\"AdminResource\"},{\"name\":\"grantedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"grantedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"admin\",\"kind\":\"object\",\"type\":\"Admin\",\"relationName\":\"AdminToAdminPermission\"}],\"dbName\":null},\"AdminAPIKey\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"adminId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"keyHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"keyPrefix\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scopes\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"rateLimit\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"allowedIps\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastUsedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"revokedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"admin\",\"kind\":\"object\",\"type\":\"Admin\",\"relationName\":\"AdminToAdminAPIKey\"}],\"dbName\":null},\"AdminInvitation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"AdminRole\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"invitedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"acceptedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"inviter\",\"kind\":\"object\",\"type\":\"Admin\",\"relationName\":\"InvitedBy\"}],\"dbName\":null},\"AdminSecurityEvent\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eventType\",\"kind\":\"enum\",\"type\":\"SecurityEventType\"},{\"name\":\"severity\",\"kind\":\"enum\",\"type\":\"SecuritySeverity\"},{\"name\":\"adminId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"resolved\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"resolvedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"resolvedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Subscription\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workspaceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tier\",\"kind\":\"enum\",\"type\":\"SubscriptionTier\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"SubscriptionStatus\"},{\"name\":\"stripeCustomerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripeSubscriptionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"credits\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"monthlyCreditQuota\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"creditResetDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"maxCanvases\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxActionPodsPerCanvas\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxDocumentSizeInMB\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxCollaboratorsPerCanvas\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"canInviteToWorkspace\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"canInviteToCanvas\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"canCreatePublicLinks\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"canUseAdvancedModels\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"canAccessAnalytics\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"canExportData\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"nextBillingDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"currentPeriodStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"currentPeriodEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"cancelAtPeriodEnd\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isByokMode\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"workspace\",\"kind\":\"object\",\"type\":\"Workspace\",\"relationName\":\"SubscriptionToWorkspace\"},{\"name\":\"usageLogs\",\"kind\":\"object\",\"type\":\"PodUsageLog\",\"relationName\":\"PodUsageLogToSubscription\"},{\"name\":\"creditPurchases\",\"kind\":\"object\",\"type\":\"CreditPurchase\",\"relationName\":\"CreditPurchaseToSubscription\"},{\"name\":\"creditUsage\",\"kind\":\"object\",\"type\":\"CreditUsageLog\",\"relationName\":\"CreditUsageLogToSubscription\"}],\"dbName\":null},\"CreditPurchase\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subscriptionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creditsPurchased\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"amountPaid\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripeChargeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"purchasedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"subscription\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"CreditPurchaseToSubscription\"}],\"dbName\":null},\"CreditUsageLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subscriptionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workspaceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"canvasId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"podId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"executionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creditsUsed\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"balanceBefore\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"balanceAfter\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"provider\",\"kind\":\"enum\",\"type\":\"LLMProvider\"},{\"name\":\"modelId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"modelName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"subscription\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"CreditUsageLogToSubscription\"}],\"dbName\":null},\"ModelPricingTier\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"enum\",\"type\":\"LLMProvider\"},{\"name\":\"modelId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"ModelCategory\"},{\"name\":\"displayName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"inputTokenCost\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"outputTokenCost\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"reasoningTokenCost\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"creditsPerMillionInputTokens\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"creditsPerMillionOutputTokens\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"creditsPerMillionReasoningTokens\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxTokens\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxOutputTokens\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"supportsStreaming\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"supportsVision\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"supportsAudio\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"supportsVideo\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"supportsFunctions\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"supportsJsonMode\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"supportsSystemPrompt\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"providerConfig\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"effectiveFrom\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"effectiveUntil\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Canvas\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workspaceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"visibility\",\"kind\":\"enum\",\"type\":\"CanvasVisibility\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"thumbnailS3Key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"thumbnailGeneratedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"workspace\",\"kind\":\"object\",\"type\":\"Workspace\",\"relationName\":\"CanvasToWorkspace\"},{\"name\":\"actionPods\",\"kind\":\"object\",\"type\":\"ActionPod\",\"relationName\":\"ActionPodToCanvas\"},{\"name\":\"edges\",\"kind\":\"object\",\"type\":\"Edge\",\"relationName\":\"CanvasToEdge\"},{\"name\":\"contextualPods\",\"kind\":\"object\",\"type\":\"ActionPod\",\"relationName\":\"CanvasAsContext\"},{\"name\":\"contextModules\",\"kind\":\"object\",\"type\":\"ContextModule\",\"relationName\":\"CanvasOriginal\"},{\"name\":\"collaborators\",\"kind\":\"object\",\"type\":\"CanvasCollaborator\",\"relationName\":\"CanvasToCanvasCollaborator\"},{\"name\":\"invitations\",\"kind\":\"object\",\"type\":\"CanvasInvitation\",\"relationName\":\"CanvasToCanvasInvitation\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"CanvasSession\",\"relationName\":\"CanvasToCanvasSession\"},{\"name\":\"activityLog\",\"kind\":\"object\",\"type\":\"CanvasActivityLog\",\"relationName\":\"CanvasToCanvasActivityLog\"},{\"name\":\"comments\",\"kind\":\"object\",\"type\":\"CanvasComment\",\"relationName\":\"CanvasToCanvasComment\"}],\"dbName\":null},\"CanvasInvitation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"canvasId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accessLevel\",\"kind\":\"enum\",\"type\":\"CanvasAccessLevel\"},{\"name\":\"permissions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"invitedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"invitedUserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"InvitationStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"acceptedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"canvas\",\"kind\":\"object\",\"type\":\"Canvas\",\"relationName\":\"CanvasToCanvasInvitation\"},{\"name\":\"inviter\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CanvasInvitedBy\"},{\"name\":\"invitedUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CanvasInvitedUser\"}],\"dbName\":null},\"CanvasCollaborator\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"canvasId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accessLevel\",\"kind\":\"enum\",\"type\":\"CanvasAccessLevel\"},{\"name\":\"canEdit\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"canExecute\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"canDelete\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"canShare\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"canInvite\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"invitedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"invitedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastViewedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"canvas\",\"kind\":\"object\",\"type\":\"Canvas\",\"relationName\":\"CanvasToCanvasCollaborator\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CanvasCollaboratorToUser\"}],\"dbName\":null},\"CanvasSession\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"canvasId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"anonymousName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"socketId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cursorPosition\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"selectedPodIds\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"viewportState\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"userColor\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"connectedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastHeartbeatAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"disconnectedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"canvas\",\"kind\":\"object\",\"type\":\"Canvas\",\"relationName\":\"CanvasToCanvasSession\"}],\"dbName\":null},\"CanvasActivityLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"canvasId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"enum\",\"type\":\"CanvasActivityAction\"},{\"name\":\"entityType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"changeData\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"canvas\",\"kind\":\"object\",\"type\":\"Canvas\",\"relationName\":\"CanvasToCanvasActivityLog\"}],\"dbName\":null},\"CanvasComment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"canvasId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"position\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"podId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isResolved\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"resolvedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resolvedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"canvas\",\"kind\":\"object\",\"type\":\"Canvas\",\"relationName\":\"CanvasToCanvasComment\"}],\"dbName\":null},\"ActionPod\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"canvasId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ActionPodType\"},{\"name\":\"position\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"executionStatus\",\"kind\":\"enum\",\"type\":\"ActionPodExecutionStatus\"},{\"name\":\"lastExecutionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contextCanvasId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"documentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lockedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lockedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"dynamoPartitionKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dynamoSortKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"s3VectorBucket\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"s3VectorKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"canvas\",\"kind\":\"object\",\"type\":\"Canvas\",\"relationName\":\"ActionPodToCanvas\"},{\"name\":\"contextCanvas\",\"kind\":\"object\",\"type\":\"Canvas\",\"relationName\":\"CanvasAsContext\"},{\"name\":\"document\",\"kind\":\"object\",\"type\":\"Document\",\"relationName\":\"ActionPodToDocument\"},{\"name\":\"sourceEdges\",\"kind\":\"object\",\"type\":\"Edge\",\"relationName\":\"SourcePod\"},{\"name\":\"targetEdges\",\"kind\":\"object\",\"type\":\"Edge\",\"relationName\":\"TargetPod\"},{\"name\":\"executions\",\"kind\":\"object\",\"type\":\"ActionPodExecution\",\"relationName\":\"ActionPodToActionPodExecution\"},{\"name\":\"usageLogs\",\"kind\":\"object\",\"type\":\"PodUsageLog\",\"relationName\":\"ActionPodToPodUsageLog\"}],\"dbName\":null},\"Edge\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"canvasId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sourcePodId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"targetPodId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sourceHandle\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"targetHandle\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"animated\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"canvas\",\"kind\":\"object\",\"type\":\"Canvas\",\"relationName\":\"CanvasToEdge\"},{\"name\":\"sourcePod\",\"kind\":\"object\",\"type\":\"ActionPod\",\"relationName\":\"SourcePod\"},{\"name\":\"targetPod\",\"kind\":\"object\",\"type\":\"ActionPod\",\"relationName\":\"TargetPod\"}],\"dbName\":null},\"ActionPodExecution\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"podId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"canvasId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workspaceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ActionPodExecutionStatus\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"finishedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"runtimeInMs\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"provider\",\"kind\":\"enum\",\"type\":\"LLMProvider\"},{\"name\":\"modelId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"modelName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerMetadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"requestMetadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"responseMetadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"errorCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"inputTokens\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"outputTokens\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reasoningTokens\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"creditsConsumed\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"costInUsd\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"pod\",\"kind\":\"object\",\"type\":\"ActionPod\",\"relationName\":\"ActionPodToActionPodExecution\"}],\"dbName\":null},\"PodUsageLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"podId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"executionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"canvasId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workspaceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subscriptionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"enum\",\"type\":\"LLMProvider\"},{\"name\":\"modelId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"modelName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerMetadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"inputTokens\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"outputTokens\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reasoningTokens\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"creditsConsumed\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"runtimeInMs\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"inputTokenCost\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"outputTokenCost\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"reasoningTokenCost\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"totalCostInUsd\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"executedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"pod\",\"kind\":\"object\",\"type\":\"ActionPod\",\"relationName\":\"ActionPodToPodUsageLog\"},{\"name\":\"subscription\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"PodUsageLogToSubscription\"}],\"dbName\":null},\"ContextModule\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workspaceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"definitionJson\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"originalCanvasId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"workspace\",\"kind\":\"object\",\"type\":\"Workspace\",\"relationName\":\"ContextModuleToWorkspace\"},{\"name\":\"originalCanvas\",\"kind\":\"object\",\"type\":\"Canvas\",\"relationName\":\"CanvasOriginal\"}],\"dbName\":null},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"AccountToUser\"},{\"name\":\"workspaces\",\"kind\":\"object\",\"type\":\"WorkspaceUser\",\"relationName\":\"UserToWorkspaceUser\"},{\"name\":\"refreshTokens\",\"kind\":\"object\",\"type\":\"RefreshToken\",\"relationName\":\"RefreshTokenToUser\"},{\"name\":\"canvasCollaborations\",\"kind\":\"object\",\"type\":\"CanvasCollaborator\",\"relationName\":\"CanvasCollaboratorToUser\"},{\"name\":\"sentWorkspaceInvites\",\"kind\":\"object\",\"type\":\"WorkspaceInvitation\",\"relationName\":\"InvitedBy\"},{\"name\":\"receivedWorkspaceInvites\",\"kind\":\"object\",\"type\":\"WorkspaceInvitation\",\"relationName\":\"InvitedUser\"},{\"name\":\"sentCanvasInvites\",\"kind\":\"object\",\"type\":\"CanvasInvitation\",\"relationName\":\"CanvasInvitedBy\"},{\"name\":\"receivedCanvasInvites\",\"kind\":\"object\",\"type\":\"CanvasInvitation\",\"relationName\":\"CanvasInvitedUser\"}],\"dbName\":null},\"RefreshToken\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deviceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RefreshTokenToUser\"}],\"dbName\":null},\"Account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"enum\",\"type\":\"AuthProvider\"},{\"name\":\"providerAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accessToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refreshToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountToUser\"}],\"dbName\":null},\"Workspace\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"WorkspaceType\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"members\",\"kind\":\"object\",\"type\":\"WorkspaceUser\",\"relationName\":\"WorkspaceToWorkspaceUser\"},{\"name\":\"canvases\",\"kind\":\"object\",\"type\":\"Canvas\",\"relationName\":\"CanvasToWorkspace\"},{\"name\":\"documents\",\"kind\":\"object\",\"type\":\"Document\",\"relationName\":\"DocumentToWorkspace\"},{\"name\":\"subscription\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"SubscriptionToWorkspace\"},{\"name\":\"contextModules\",\"kind\":\"object\",\"type\":\"ContextModule\",\"relationName\":\"ContextModuleToWorkspace\"},{\"name\":\"shareLinks\",\"kind\":\"object\",\"type\":\"ShareLink\",\"relationName\":\"ShareLinkToWorkspace\"},{\"name\":\"apiKeys\",\"kind\":\"object\",\"type\":\"ProviderAPIKey\",\"relationName\":\"ProviderAPIKeyToWorkspace\"},{\"name\":\"invitations\",\"kind\":\"object\",\"type\":\"WorkspaceInvitation\",\"relationName\":\"WorkspaceToWorkspaceInvitation\"}],\"dbName\":null},\"WorkspaceUser\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workspaceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"WorkspaceRole\"},{\"name\":\"canCreateCanvas\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"canDeleteCanvas\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"canManageBilling\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"canInviteMembers\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"canManageMembers\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"canManageApiKeys\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"joinedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"invitedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToWorkspaceUser\"},{\"name\":\"workspace\",\"kind\":\"object\",\"type\":\"Workspace\",\"relationName\":\"WorkspaceToWorkspaceUser\"}],\"dbName\":null},\"WorkspaceInvitation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workspaceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"WorkspaceRole\"},{\"name\":\"permissions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"invitedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"invitedUserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"InvitationStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"acceptedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"workspace\",\"kind\":\"object\",\"type\":\"Workspace\",\"relationName\":\"WorkspaceToWorkspaceInvitation\"},{\"name\":\"inviter\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"InvitedBy\"},{\"name\":\"invitedUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"InvitedUser\"}],\"dbName\":null},\"ProviderAPIKey\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workspaceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"enum\",\"type\":\"LLMProvider\"},{\"name\":\"displayName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"keyHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerConfig\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"endpoint\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"authType\",\"kind\":\"enum\",\"type\":\"AuthType\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"lastUsedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"workspace\",\"kind\":\"object\",\"type\":\"Workspace\",\"relationName\":\"ProviderAPIKeyToWorkspace\"}],\"dbName\":null},\"ShareLink\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"publicToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assetType\",\"kind\":\"enum\",\"type\":\"ShareableAssetType\"},{\"name\":\"assetId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workspaceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accessLevel\",\"kind\":\"enum\",\"type\":\"ShareAccessLevel\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"viewCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastViewedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"workspace\",\"kind\":\"object\",\"type\":\"Workspace\",\"relationName\":\"ShareLinkToWorkspace\"}],\"dbName\":null},\"Document\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workspaceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storageKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"s3Bucket\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mimeType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sizeInBytes\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"DocumentStatus\"},{\"name\":\"uploadedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"workspace\",\"kind\":\"object\",\"type\":\"Workspace\",\"relationName\":\"DocumentToWorkspace\"},{\"name\":\"embeddings\",\"kind\":\"object\",\"type\":\"Embedding\",\"relationName\":\"DocumentToEmbedding\"},{\"name\":\"actionPods\",\"kind\":\"object\",\"type\":\"ActionPod\",\"relationName\":\"ActionPodToDocument\"}],\"dbName\":null},\"Embedding\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"documentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"model\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"chunkIndex\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"chunkText\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"s3VectorBucket\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"s3VectorKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vectorDimension\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"document\",\"kind\":\"object\",\"type\":\"Document\",\"relationName\":\"DocumentToEmbedding\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

